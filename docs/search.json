[
  {
    "objectID": "01-introductions.html",
    "href": "01-introductions.html",
    "title": "Welcome to the course!",
    "section": "",
    "text": "Welcome to Intermediate Data Science! Last semester was the first offering of this course–I really enjoyed it. I am even more thrilled to have made improvements that will make it a better learning experience for you!"
  },
  {
    "objectID": "01-introductions.html#plan-for-today",
    "href": "01-introductions.html#plan-for-today",
    "title": "Welcome to the course!",
    "section": "Plan for today",
    "text": "Plan for today\n\nWhat is this course about?\nGet to know your classmates\nShaping our syllabus together\nBrainstorming project ideas and connecting with potential project partners via the 12 Favorite Problems framework\nWarming up our wrangling and visualization skills with Tidy Tuesday!"
  },
  {
    "objectID": "01-introductions.html#what-is-this-course-about",
    "href": "01-introductions.html#what-is-this-course-about",
    "title": "Welcome to the course!",
    "section": "What is this course about?",
    "text": "What is this course about?\n\nExpanding your abilities for self-reflection in service of:\n\nYour lifelong independent learning\nOur course community\n\nExpanding your data science toolbox:\n\nVisualization\nWrangling\nData acquisition\nData storytelling\n\n\nI’ve intentionally put reflection first and data science skills second not necessarily in order of importance but because cultivating data science skills will come automatically—reflection and community-building won’t."
  },
  {
    "objectID": "01-introductions.html#get-to-know-your-classmates",
    "href": "01-introductions.html#get-to-know-your-classmates",
    "title": "Welcome to the course!",
    "section": "Get to know your classmates",
    "text": "Get to know your classmates\nIn groups, introduce yourselves with the following prompts: (~2 minutes/person)\n\nName, preferred pronouns\nMacalester connections (e.g., majors/minors/concentrations, clubs, teams, events regularly attended)\nHow are you feeling about the coming semester?\nWhat is one thing you are excited to talk about in conversation?\nIf you could use data to investigate anything, what would it be and why?"
  },
  {
    "objectID": "01-introductions.html#syllabus-shaping-learning-goals",
    "href": "01-introductions.html#syllabus-shaping-learning-goals",
    "title": "Welcome to the course!",
    "section": "Syllabus shaping: learning goals",
    "text": "Syllabus shaping: learning goals\nNavigate to the Course learning goals section of our syllabus.\nPart 1: Reflect (~3 min)\nWrite a few sentences responding to the following questions:\n\nWhat are your goals in taking this class?\nDo you see your goals reflected in the course learning goals? If not, how would you like to see the course goals amended to see your goals reflected in them?\n\nPart 2: Share (~5 min)\nAt your tables, take turns sharing your responses to the above questions. As a group, summarize your discussion in this Google Doc.\nBefore we meet again next Tuesday, I will look over your comments in the Google Doc and add my own responses. I’ll address your comments in class next Tuesday."
  },
  {
    "objectID": "01-introductions.html#course-project-brainstorming",
    "href": "01-introductions.html#course-project-brainstorming",
    "title": "Welcome to the course!",
    "section": "Course project: brainstorming",
    "text": "Course project: brainstorming\nIn a data science course, a course project is essential for synthesizing our tools in a meaningful context.\nOur course project will be a semester-long experience because I believe that this longer time span will improve the quality of the projects.\nWe will start brainstorming ideas today using a framework called the 12 Favorite Problems (12FP)."
  },
  {
    "objectID": "01-introductions.html#favorite-problems-context",
    "href": "01-introductions.html#favorite-problems-context",
    "title": "Welcome to the course!",
    "section": "12 Favorite Problems: context",
    "text": "12 Favorite Problems: context\nRichard Feynman was a Nobel prize-winning physicist whose contributions fundamentally reshaped our understanding of the physical world.\nA major part of his success was a method for viewing the world: a mindset of viewing the world through the lens of several open-ended questions. Feynman called these his “favorite problems.” He said of these problems:\n\nYou have to keep a dozen of your favorite problems constantly present in your mind, although by and large they will lay in a dormant state. Every time you hear or read a new trick or a new result, test it against each of your twelve problems to see whether it helps. Every once in a while there will be a hit, and people will say, “How did [they] do it? [They] must be a genius!”\nQuote source: Forte Labs"
  },
  {
    "objectID": "01-introductions.html#the-12-favorite-problems-framework",
    "href": "01-introductions.html#the-12-favorite-problems-framework",
    "title": "Welcome to the course!",
    "section": "The 12 Favorite Problems framework",
    "text": "The 12 Favorite Problems framework\nA favorite problem is a meaningful, open-ended question that allows you to learn, explore, and act with intention on your biggest interests in life. Here are two of mine:\n\nHow can I be the kind of mother I can feel proud of without losing myself?\nHow can I have a fulfilling career without burning out?\n\nFormulating several of these favorite problems can lead to several benefits:\n\n\nDedicate your time and attention to ideas that truly spark your curiosity\nSee how a piece of information might be useful and why it’s worth keeping\nSee insightful patterns across multiple subjects that seem unrelated, but might share a common thread\nFocus the impact of your work on problems where you can make a real difference\nPrime your subconscious to notice helpful solutions to your biggest challenges in the world around you\nAttract like-minded people who have the same interests and goals as you\n\nSource: Forte Labs\n\nRelevance to our course: Brainstorming 12 favorite problems can help us determine some questions that the course project can address."
  },
  {
    "objectID": "01-introductions.html#brainstorming-our-12-favorite-problems-fps",
    "href": "01-introductions.html#brainstorming-our-12-favorite-problems-fps",
    "title": "Welcome to the course!",
    "section": "Brainstorming our 12 favorite problems (FPs)",
    "text": "Brainstorming our 12 favorite problems (FPs)\n\nOpen up a blank file in which to type.\nNavigate to this article by Tiago Forte, and scroll down to the first step “Get started with these prompts.”\nUsing these prompts, take about 15 minutes to brainstorm your own 12 favorite problems.\n\nTiago Forte provides examples of his 12 FPs in his post. Feel free to also look at my own for more examples. (I’m working on updating my 12 FPs today alongside you!)\n\n\nSave your 12FP file in a place you’ll be able to find easily."
  },
  {
    "objectID": "01-introductions.html#sharing-and-refining-our-12-fps",
    "href": "01-introductions.html#sharing-and-refining-our-12-fps",
    "title": "Welcome to the course!",
    "section": "Sharing and refining our 12 FPs",
    "text": "Sharing and refining our 12 FPs\nIn groups, each person will have ~2 minutes to share their top 2 FPs and get some feedback from the group. The group should give feedback to help make the FPs more specific, counterintuitive, and interdiscipinary:\n\nSpecific:\n\nOriginal: “How can I be a better leader?” is a little broad.\nPossible improvement: “How can I be a better leader as an introvert?”\n\nCounterintuitive:\n\nOriginal: “How can I improve the standard of living in the global south?”\nPossible improvement: “How can I improve the standard of living in the global south without further contributing to the climate change that threatens those regions the most?”\n\nInterdisciplinary:\n\nOriginal: How can I improve education?”\nPossible improvement: “How can I improve education by borrowing ideas from video games?”\n\n\n(Examples from Forte Labs)"
  },
  {
    "objectID": "01-introductions.html#broadcast-your-signal-to-start-finding-your-people",
    "href": "01-introductions.html#broadcast-your-signal-to-start-finding-your-people",
    "title": "Welcome to the course!",
    "section": "Broadcast your signal to start finding your people",
    "text": "Broadcast your signal to start finding your people\n\nJoin our course Slack workspace via this invite link.\n\nIf you’ve already joined, navigate to our Slack workspace here.\n\nIn the #general channel, write a very brief post in which you:\n\nIntroduce yourself however you see fit.\nDescribe the general areas that your 12 favorite problems tend to cover.\nIf you already feel a pull towards a project area, share that too."
  },
  {
    "objectID": "01-introductions.html#project-opportunity-collaborating-with-a-community-partner",
    "href": "01-introductions.html#project-opportunity-collaborating-with-a-community-partner",
    "title": "Welcome to the course!",
    "section": "Project opportunity: collaborating with a community partner",
    "text": "Project opportunity: collaborating with a community partner\nIgnite Afterschool is looking to partner with data science students on a few fronts:\n\nThey are looking to update the data briefs that they use to communicate with families about the impact of afterschool programming.\n\nThis will involve looking at data from the Minnesota Student Survey. (I already have access to this data.)\nThere is opportunity for creative input from students on how best to display this information.\n\nThey are also looking for help with a data-driven policy analysis surrounding the impact of the recent cannabis legalization laws on youth outcomes. There is potential to explore this with the MN Student Survey data as well as other data.\n\nIf you are interested in this opportunity, please reach out to me by Tuesday, January 23."
  },
  {
    "objectID": "01-introductions.html#tidy-tuesday",
    "href": "01-introductions.html#tidy-tuesday",
    "title": "Welcome to the course!",
    "section": "Tidy Tuesday!",
    "text": "Tidy Tuesday!\nFor the remainder of the class period, we’ll work on the most recent Tidy Tuesday challenge.\nFeel free to clarify anything about the course with me during this time!"
  },
  {
    "objectID": "01-introductions.html#announcements",
    "href": "01-introductions.html#announcements",
    "title": "Welcome to the course!",
    "section": "Announcements",
    "text": "Announcements\nBefore class on Tuesday, please do the following:\n\nSet up R and RStudio using these instructions.\nUpdate your Slack profile with preferred name, pronouns, name pronunciation. (To find your profile, click on your name under Direct Messages on the left menu, and click “Edit Profile”.)\nComplete the pre-course survey.\nLook at the Guiding Questions for next Tuesday’s class on advanced visualization with ggplot2.\nTake a look at Homework 1."
  },
  {
    "objectID": "02-adv-ggplot.html",
    "href": "02-adv-ggplot.html",
    "title": "Advanced Data Visualization in ggplot2",
    "section": "",
    "text": "After this lesson, you should be able to:\n\nNavigate the ggplot2 reference page to find the functions needed to create a desired visualization\nUse the information on a function help page to construct desired plot features\n\nScan the information in the Usage section to identify function arguments that must be set\nUnderstand how the function arguments work by using information in the Arguments section\nUse the information in the the Aesthetics and Examples sections to control plot appearance\n\nIdentify when it would be necessary to use different data arguments within the ggplot() and geom_() layers"
  },
  {
    "objectID": "02-adv-ggplot.html#pair-programming-background",
    "href": "02-adv-ggplot.html#pair-programming-background",
    "title": "Advanced Data Visualization in ggplot2",
    "section": "Pair programming background",
    "text": "Pair programming background\nIn pair programming, two individuals use one computer and work together to solve the problem at hand. Each individual takes turns in one of two roles:\n\nDriver: The Driver is at the computer typing and speaking their thought process out loud.\nNavigator: The Navigator reviews all code that the Driver writes as it’s typed, guides the overall direction of the code (keeps the instructions in mind), and pulls up references.\n\nWhy are we using pair programming? Pair programming is used effectively in industry to speed up individual employee’s learning of a company’s codebase and reduce time wasted on fixing bugs."
  },
  {
    "objectID": "02-adv-ggplot.html#your-task",
    "href": "02-adv-ggplot.html#your-task",
    "title": "Advanced Data Visualization in ggplot2",
    "section": "Your task",
    "text": "Your task\nBefore diving in to plot creation, get to know your partner by telling each other about the general themes in your 12 favorite problems (FPs). Try to find some overlap in your themes and share one of your FPs that relates to that overlapping theme.\nWork together until your precipitation plot looks as below.\n\nThe culmPrec variable contains cumulative precipitation for the month up to the given day.\nThe recordP variable is a TRUE/FALSE indicator of whether a day was a precipitation record. These are marked by the downward pointing triangles.\nThe numbers on the plot indicate the total precipitation for the month. Do some searching about the hjust and vjust options to adjust the alignment of the numbers.\nThe blue and tan colors are \"#32a3d8\" and \"#ebeae2\".\n\n\n\n\n\n\n\n\n\n\nWhen should the Driver and Navigator switch roles? For this exercise, you will switch roles once a particular plot layer (one geom) has been implemented correctly. You can send code back and forth via email or a direct message on Slack.\n\n\n\n\n\n\nStop to Reflect\n\n\n\n\n\nAs you pair program, be aware of your comforts and discomforts in the roles of driver and navigator. Pay attention to the comforts and discomforts of your partner. What could you do to support them in becoming more comfortable and confident in both roles?\n\n\n\n\n\n\n\n\n\nRecord Errors\n\n\n\n\n\nEvery time you run into a new error, record the error message and your process for fixing the error in the “Error Log” section of the Quarto file for these exercises."
  },
  {
    "objectID": "03-adv-maps.html",
    "href": "03-adv-maps.html",
    "title": "Advanced Spatial Visualizations",
    "section": "",
    "text": "After this lesson, you should be able to:\n\nUnderstand the basics of a CRS (coordinate reference system)\nUnderstand and recognize different spatial file types and data types in R\nImplement some of the basic plotting with the sf package\nUnderstand foundational ideas in working with spatial data (aggregating spatial point data to a spatial region, joining spatial data sets)\n\n\nSlides for today are available here. (For our main activity, we will be using the rest of the webpage below.)\n\nYou can download a template Quarto file to start from here. Put this file in an activities folder within a folder for this course."
  },
  {
    "objectID": "03-adv-maps.html#ellipsoid",
    "href": "03-adv-maps.html#ellipsoid",
    "title": "Advanced Spatial Visualizations",
    "section": "Ellipsoid",
    "text": "Ellipsoid\nWhile you might have learned that the Earth is a sphere, it is actually closer to an ellipsoid with a bulge at the equator. Additionally, the surface is irregular and not smooth. To define a CRS, we first need to choose a mathematical model represent a smooth approximation to the shape of the Earth. The common ellipsoid models are known as WGS84 and GRS80. See the illustration below of one ellipsoid model (shown in black) as compared to Earth’s true irregular surface (shown in red).\n\n\n\nIllustration of ellipsoid model and Earth’s irregular surface, centered to have an overall best fit. Source: www.icsm.gov.au"
  },
  {
    "objectID": "03-adv-maps.html#datum",
    "href": "03-adv-maps.html#datum",
    "title": "Advanced Spatial Visualizations",
    "section": "Datum",
    "text": "Datum\nEach ellipsoid model has different ways to position it self relative to Earth depending on the center or origin. Each potential position and reference frame for representing the position of locations on Earth is called a datum.\nFor example, two different datum for the same ellipsoid model can provide a more accurate fit or approximation of the Earth’s surface depending on the region of interest (South America v. North America). For example, the NAD83 datum is a good fit for the GRS80 ellipsoid in North America, but SIRGAS2000 is a better fit for the GRS80 ellipsoid in South America. The illustration below shows one datum in which the center of the ellipsoid does not coincide with the center of Earth’s mass. With this position of the ellipsoid, we gain a better fit for the southern half of the Earth.\n\n\n\nIllustration of ellipsoid model and Earth’s irregular surface for a datum that better fits southern part (bottom right) of the Earth. Source: www.icsm.gov.au\n\n\nIt is useful to know that the Global Positioning System (GPS) uses the WGS84 ellipsoid model and a datum by the same name, which provides an overall best fit of the Earth.\nIf you have longitude and latitude coordinates for a location, it is important to know what datum and ellipsoid were used to define those positions.\nNote: In practice, the horizontal distance between WGS84 and NAD83 coordinates is about 3-4 feet in the US, which may not be significant for most applications.\n\nExercise 1\nGo to https://epsg.io/. Search for a location important to you (state, country, etc.). Filter based on Datum (Geodetic) on the right. Click on one geodetic datum option for your region of interest. Make sure your location is listed under the “Area of use” attribute.\nProvide the region of interest (e.g. United States), the full datum name (e.g. North American Datum 1983), the shorthand name (e.g. NAD83, EPSG: 6269), and the ellipsoid (e.g. GRS 1980).\n\nLocation:\n\n\n\nExample Solution\n\n\nLocation 1: South Africa, Cape, EPSG:6222, Ellipsoid: Clarke 1880 (Arc)\n\n\nLocation 2: Thailand, Indian 1975, EPSG:6240, Ellipsoid: Everest 1830 (1937 Adjustment)\n\n\nLocation 3: Colombia, Marco Geocentrico Nacional de Referencia, EPSG:6686, Ellipsoid: GRS 1980\n\n\n\n\nExercise 2\nLet’s now practice specifying coordinates in a CRS.\nFor geographic coordinate reference systems, the coordinates of locations are specified by latitude (degrees, minutes, and seconds north or south of the equator), longitude (degrees, minutes, and seconds west or east of a prime meridian), and sometimes height.\nUse the “Get position on a map” feature of https://epsg.io/ to locate the Olin-Rice Science Center at Macalester. The two boxes at the top allow you to specify a longitude (left box) and latitude (right box) in degrees. Enter the following to focus OLRI:\n\nLongitude: -93.168855\nLatitude: 44.936611\n\nFor projected coordinate reference systems, the coordinates of locations are typically specified by easting (x) and northing (y).\nClick the “Transform” button at the top to find the location of OLRI in northing and easting coordinates (in meters) for the CRS EPSG:26993.\n\nEasting:\nNorthing:\n\n\n\nSolution\n\n\nEasting: 865601.0163401571\nNorthing: 315516.10931633075"
  },
  {
    "objectID": "03-adv-maps.html#projection",
    "href": "03-adv-maps.html#projection",
    "title": "Advanced Spatial Visualizations",
    "section": "Projection",
    "text": "Projection\nLastly, the Earth lives in a 3 dimensional (3D) world and most visualizations are on a 2 dimensional (2D) surface. We must choose a projection method to represent points, regions, and lines on Earth on a 2D map with distance units (typically meter, international foot, US survey foot). In that projection process, a 3D element will lose angle, area, and/or distance when projected onto a 2D surface, no matter which method is chosen.\nFor a good overview of common projection methods, see https://pubs.usgs.gov/gip/70047422/report.pdf.\nOne of the most commonly used projection is the Mercator projection which is a cylindrical map projection from the 1500’s. It became popular for navigation because it represented north as up and south as down everywhere and preserves local directions and shape. However, it inflates the size of regions far from the equator. Thus, Greenland, Antarctica, Canada, and Russia appear large relative to their actual land mass as compared to Central Africa. See the illustration below to compare the area/shape of the countries with the Mercator projection of the world (light blue) with the true areas/shapes (dark blue).\n\n\n\nSource: @neilrkaye\n\n\nBelow you can see four different world projections. Take note of what is lost in terms of angle, area, or distance in these projections.\n\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n# Basic Map w/ labels\nggplot(data = world) + \n    geom_sf(color = \"black\", fill = \"#bada55\") +\n    labs(x = \"Longitude\", y = \"Latitude\", title = \"World Map - Mercator Projection\", subtitle = paste0(\"(\", length(unique(world$name)), \" countries)\")) +\n    theme_bw() \n\n\n\nggplot(data = world) +\n    geom_sf(color = \"black\", fill = \"#bada55\") +\n    coord_sf(crs = \"+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs\") + \n    labs(title = \"Lambert Azimuthal Equal-Area Projection\", subtitle = \"Correctly represents area but not angles\") + \n    theme_bw()\n\n\n\nggplot(data = world) +\n    geom_sf(color = \"black\", fill = \"#bada55\") +\n    coord_sf(crs = \"+proj=fouc\") + \n    labs(title = \"Foucaut Projection\", subtitle = \"Correctly represents area, lots of shape distortion in high latitudes\") + \n    theme_bw() \n\n\n\nggplot(data = world) +\n    geom_sf(color = \"black\", fill = \"#bada55\") +\n    coord_sf(crs = \"+proj=natearth2\") + \n    labs(title = \"Natural Earth II Projection\", subtitle = \"Represents globe shape, distorted at high latitudes\") + \n    theme_bw()\n\n\n\n\n\nExercise 3\nCreate a world map with a different projection (beyond the four above). Go to https://proj.org/en/9.2/operations/projections/index.html and find another projection. Look for the proj-string and copy that to the crs = argument in coord_sf().\n\nggplot(data = world) +\n    geom_sf(color = \"black\", fill = \"#bada55\") +\n    coord_sf(crs = \"??\") + \n    labs(title = \"?? Projection\", subtitle = \"??\") + \n  theme_bw() \n\nWhat is interesting, surprising, or different to you about the map of the Earth based on this projection?\n\nANSWER:\n\nTalk with a neighbor about the projection they tried. What projection did they use and how is it different from the one you chose?\n\nANSWER:\n\n\n\n\n\n\n\nStop to Reflect\n\n\n\n\n\nIf coordinate reference systems are new to you, how do you feel about all of this new information? What are the most important points to take away? What are the documents and sites you can refer back to when you need more details?\nWhen you learn about a new area of study, it can feel overwhelming. Pick out the 3-5 priority ideas to help you organize all of the details."
  },
  {
    "objectID": "03-adv-maps.html#data-models",
    "href": "03-adv-maps.html#data-models",
    "title": "Advanced Spatial Visualizations",
    "section": "Data Models",
    "text": "Data Models\n\nVector\nVector data represents the world as a set of spatial geometries that are defined in terms of location coordinates (with a specified CRS) with non-spatial attributes or properties.\nThe three basic vector geometries are\n\nPoints: Locations defined based on a (x, y) coordinates.\nLines: A set of ordered points connected by straight lines.\nPolygons: A set of ordered points connected by straight lines, first and last point are the same.\n\nFor example, city locations can be represented with points, roads and rivers can be represented by lines, and geo-political boundaries and lakes can be represented by polygons.\nHundreds of file formats exist to store spatial vector data. A text file (such as .csv) can store the coordinates in two columns (x,y) in addition to a group id (needed for lines and polygons) plus attributes or properties in additional columns. Note that text files do not store the CRS. However, shapefiles (.shp) developed by ESRI is one of the most widely supported spatial vector file format (that includes the CRS). Additionally, GeoJSON (.geojson) and KML (.kml) are additional popular formats.\n\n\nExercise 4\nTo create maps, we’ll need to have access to some spatial data.\nGo to the following websites and download the vector data files indicated. Put all of the downloaded files/folders in same folder as this Rmd file.\n\nURL: https://team.carto.com/u/andrew/tables/andrew.us_states_hexgrid/public/map\n\nDownload File Type: GeoJSON\nName of File: us_states_hexgrid.geojson\n\nURL: https://www2.census.gov/programs-surveys/decennial/2020/data/apportionment/apportionment.csv\n\nDownload File Type: csv\nName of File: apportionment.csv\n\nURL: https://gisdata.mn.gov/dataset/loc-pop-centers\n\nDownload File Type: shapefile (.shp)\nName of File: shp_loc_pop_centers.zip (unzip this file to get a folder with the name shp_loc_pop_centers)\n\nURL: https://gisdata.mn.gov/dataset/us-mn-state-metc-water-lakes-rivers\n\nDownload File Type: shapefile (.shp)\nName of File: shp_water_lakes_rivers.zip (unzip this file to get a folder with the name shp_water_lakes_rivers)\n\n\n\n\nRaster\nRaster data represents the world using a continuous grid of cells where each cell has a single value. These values could be continuous (e.g., elevation, precipitation) or categorical (e.g., land cover type, soil type).\nTypically regular cells are square in shape but they can be rotated and sheared. Rectilinear and curvilinear shapes are also possible, depending on the spatial region of interest and CRS.\n\n\n\nDifference between vector and raster formats. Source: gis.stackexchange.com\n\n\nBe aware that high resolution raster data involves a large number of small cells. This can slow down the computations and visualizations.\nMany raster file formats exist. One of the most popular is GeoTIFF (.tif or .tiff). More complex raster formats include NetCDF (.nc) and HDF (.hdf). To work with raster data in R, you’ll use the raster, terra, and the stars packages. If you are interested in learning more, check out https://r-spatial.github.io/stars/."
  },
  {
    "objectID": "03-adv-maps.html#working-with-spatial-data-in-r",
    "href": "03-adv-maps.html#working-with-spatial-data-in-r",
    "title": "Advanced Spatial Visualizations",
    "section": "Working with Spatial Data in R",
    "text": "Working with Spatial Data in R\n\nRead data into R\nFor each file format, we need to use a different function to read in the data. See the examples below for reading in GeoJSON, CSV, and shapefiles.\n\n# Read in GeoJSON file\nhex_spatial &lt;- geojsonio::geojson_read(\"data/us_states_hexgrid.geojson\", what = \"sp\") \n\nError: File does not exist. Create it, or fix the path.\n\n# Read in CSV File\npop_growth &lt;- readr::read_csv(\"data/apportionment.csv\") %&gt;% janitor::clean_names()\n\nError: 'data/apportionment.csv' does not exist in current working directory ('/Users/lesliemyint/Library/CloudStorage/GoogleDrive-lmyint@macalester.edu/My Drive/teaching/STAT212/2024_spring/212_spring_2024').\n\n# Read in Shapefiles\nmn_cities &lt;- sf::read_sf(\"data/shp_loc_pop_centers\") #shp file/folder\n\nError: Cannot open \"data/shp_loc_pop_centers\"; The file doesn't seem to exist.\n\nmn_water &lt;- sf::read_sf(\"data/shp_water_lakes_rivers\") #shp file/folder\n\nError: Cannot open \"data/shp_water_lakes_rivers\"; The file doesn't seem to exist.\n\n\n\n\nData classes in R\nWhen data is read in, an R data object is created of a default class. Notice the classes of the R objects we read in. Also, notice that an object may have multiple classes, which indicate the type of structure it has and how functions may interact with the object.\n\nclass(hex_spatial)\n\nError in eval(expr, envir, enclos): object 'hex_spatial' not found\n\nclass(pop_growth)\n\nError in eval(expr, envir, enclos): object 'pop_growth' not found\n\nclass(mn_cities)\n\nError in eval(expr, envir, enclos): object 'mn_cities' not found\n\nclass(mn_water)\n\nError in eval(expr, envir, enclos): object 'mn_water' not found\n\n\nOlder R Spatial classes\nIn the sp package, there are many spatial classes that hold slightly different data. All Spatial* classes have a bounding box (bbox) and a CRS.\n\nSpatialPoints, SpatialLines, and SpatialPolygons provide structure to hold the basic spatial geometries of points, lines, and polygons.\nSpatial*DataFrame extends the geometry classes to a data.frame-like object with non-spatial attribute data.\n\n\n\nExercise 5\nWe can look at the first bit of the hex_spatial object to get a sense for how information in the object is organized:\n\nhead(hex_spatial,1)\n\nError in eval(expr, envir, enclos): object 'hex_spatial' not found\n\n\nBased on this information, fill in the following:\n\nCRS:\nBBOX (extent):\nGeometry type:\n\n\n\nSolution\n\n\nCRS: EPSG:4326 (+proj=longlat +datum=WGS84 +no_defs) (From Slot \"proj4string\": Coordinate Reference System:)\nBBOX: x -75.34861 -69.90; y 51.57 55.31 (From Slot \"bbox\")\nGeometry type: Polygons (Inferred from An object of class \"SpatialPolygonsDataFrame\" and class \"Polygon\")\n\n\nNewer R Spatial classes\nThe community is moving away from using older sp classes to sf classes. It is useful for you to know that the older versions exist, but we will stick with the sf classes.\n\nsfc objects are modern, general versions of the spatial geometries from the sp package with a bbox, CRS, and many geometries available.\nsf objects are data.frame-like objects with a geometry column of class sfc.\n\n\nmn_cities\n\nError in eval(expr, envir, enclos): object 'mn_cities' not found\n\n\n\n\nExercise 6\nBased on the summary of mn_cities, what are the following:\n\nCRS:\nBBOX:\nGeometry type:\n\n\n\nSolution\n\n\nCRS: NAD83 / UTM zone 15N\nBBOX: xmin: 190832.6 ymin: 4816672 xmax: 747463.4 ymax: 5468045\nGeometry type: Points\n\n\nPutting spatial data into a data.frame with fortify()\nThe data.frame and tbl (tibble) classes are standard data formats that are not specific to spatial data but are really nice for working with because of tidyverse. Our pop_growth data doesn’t include any coordinate information, so it can be stored simply as a data.frame (tbl, tbl_df, and spec_tbl_df are all subclasses of data.frame).\nYou may come across data.frames that contain spatial coordinate information, so let’s see what that might look like. We can fortify() our sp object (hex_spatial) to make it a data frame.\n\n# Convert Spatial*DataFrame to Data Frame\nhex_spatial_df &lt;- fortify(hex_spatial)\n\nError in eval(expr, envir, enclos): object 'hex_spatial' not found\n\nclass(hex_spatial_df)\n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\n\n\n\nExercise 7\nWhenever we come across a new function (fortify), it is helpful to explore the structure of information contained within the object that it creates.\nWhat are the variables in hex_spatial_df? Compare the first seven rows with the first spatial polygon of hex_spatial. Using this comparison describe the meaning of the variables in hex_spatial_df. (piece, id, and group are trickier. We’ll talk about this together.)\n\n# Display the first 7 rows of hex_spatial_df\nhead(hex_spatial_df,7)\n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\n# Look at the first polygon in the hex_spatial object (Maine)\nhex_spatial@polygons[[1]]\n\nError in eval(expr, envir, enclos): object 'hex_spatial' not found\n\n\n\nANSWER:\n\n\n\nSolution\n\n\nVariables: long, lat, order, hole, piece, id, group\n\n\nlong and lat provide the x and y coordinates of the polygon for a particlar region or area id.\n\n\nThe order is the order in which you connect the coordinate points to make a polygon.\n\n\nhole indicates whether or not it should be included or excluded in the region as a hole.\n\n\npiece indicates the number of the polygon for an individual area\n\n\nid is a unique identifier for each polygon and allows linking to the original spatial object (hex_spatial). (There is a Slot \"ID\" part of the object.)\n\n\ngroup indicates which pieces belong to the same group or should be plotted together as a single entity. This can be useful when you want to apply different aesthetics (e.g., colors, linetypes) to different groups of polygons within your spatial object. It helps in specifying how to group and style the different pieces when creating plots.\n\n\n\n\nConverting between data classes\nSometimes functions for working with spatial data will only work on an object that is of a particular class (e.g., only works on sf objects). If we have an object of a different class, we need to know how to convert it to the right class.\nWe can convert objects between these data classes with the following functions:\n\nfortify(x): sp object x to data.frame\nst_as_sf(x): sp object x to sf\nst_as_sf(x, coords = c(\"long\", \"lat\")): data.frame x to sf as points\nTo convert a data.frame with columns of long, lat, and group containing polygon geometry information, you can use:\n\n\nst_as_sf(x, coords = c(\"long\", \"lat\")) %&gt;%\n    group_by(group) %&gt;%\n    summarise(geometry = st_combine(geometry)) %&gt;%\n    st_cast(\"POLYGON\")\n\n(Note: We won’t often want to convert our data to a Spatial* class from sp package, so we’ll exclude that in this activity.)\n\n\nExercise 8\nConvert the hex_spatial data to an sf object called hex_spatial_sf. Complete these two ways\n\nhex_spatial directly to hex_spatial_sf AND\nhex_spatial_df to hex_spatial_sf.\n\n\n# Convert to SF from hex_spatial_df  \nhex_spatial_sf &lt;- hex_spatial_df %&gt;% ???  \n  \n# Convert to SF from hex_spatial\nhex_spatial_sf &lt;- hex_spatial %&gt;% ???\n\n\n\nSolution\n\n\n# Convert to SF from hex_spatial_df  \nhex_spatial_sf &lt;- hex_spatial_df %&gt;%\n    st_as_sf(coords = c(\"long\", \"lat\")) %&gt;%\n    group_by(group) %&gt;%\n    summarise(geometry = st_combine(geometry)) %&gt;%\n    st_cast(\"POLYGON\") \n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\n# Convert to SF from hex_spatial\nhex_spatial_sf &lt;- hex_spatial %&gt;% st_as_sf()\n\nError in eval(expr, envir, enclos): object 'hex_spatial' not found\n\n\n\n\n\n\n\n\n\nStop to Reflect\n\n\n\n\n\nWe’ve now talked about CRSs and how spatial data is stored in R. Thinking on the lesson so far as a whole…\n\nWhat’s making sense? What’s not?\nWhat would help connect everything we’ve talked about?\n\nRecord observations in your Process and Reflection Log.\nShare your observations with your partner. Together try to figure out what themes emerge in what you’re still working on. Then try to come up with strategies that can help you move forward.\nExample themes: What is the “why” behind this? What is the full picture/pipeline/how this is used in practice?\nExample strategies: writing condensed summaries, drawing concept maps"
  },
  {
    "objectID": "03-adv-maps.html#hexbin-choropleth",
    "href": "03-adv-maps.html#hexbin-choropleth",
    "title": "Advanced Spatial Visualizations",
    "section": "Hexbin Choropleth",
    "text": "Hexbin Choropleth\nData Source: https://r-graph-gallery.com/328-hexbin-map-of-the-usa.html\nIn this example, we’ll create an alternative choropleth map. Instead of using the actual geo-political boundaries, we will use hexagons to represent the U.S. states and maintain their relative directional position to each together. This approach results in each state having the same area in the graphic so that large regions don’t dominate the visual story.\n\nExercise 9\nDescribe what the following code chunks are doing. Be sure to consider the class of the data object, what the data object looks like to start, and what it looks like at the end of the chunk.\n\n# Chunk A\nhex_spatial_df  &lt;- hex_spatial_df %&gt;% \n  left_join(\n        data.frame(id = as.character(1:nrow(hex_spatial)) , \n        name = str_replace(hex_spatial$google_name,' \\\\(United States\\\\)',''), \n        abbr = hex_spatial$iso3166_2))\n\n\nANSWER (Chunk A):\n\n\n\nSolution\n\n\n# Chunk A\nhead(hex_spatial_df) # Start with data frame of 357 rows and 7 columns\n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\nhex_spatial_df  &lt;- hex_spatial_df %&gt;% \n  left_join( # Left join, a mutating join, a dataset with information from hex_spatial\n        data.frame(id = as.character(1:nrow(hex_spatial)) , # Create a data frame with variables id (1,2,3...), name (defined as the google_name from hex_spatial after removing \"(United States)\"), and abbr (the state abbreviation in hex_spatial as variable iso3166_2)\n        name = str_replace(hex_spatial$google_name,' \\\\(United States\\\\)',''), \n        abbr = hex_spatial$iso3166_2))\n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\nhead(hex_spatial_df) # End with data frame of 357 rows and 9 columns (new: name and abbr)\n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\n\n\n\n# Chunk B\nhex_spatial_sf &lt;- hex_spatial_sf %&gt;% \n    mutate(\n        name = str_replace(google_name,' \\\\(United States\\\\)',''),\n        abbr = iso3166_2\n    )\n\n\nANSWER (Chunk B):\n\n\n\nSolution\n\n\n# Chunk B\n\nhead(hex_spatial_sf) # Start with sf object with 51 regions and 7 variables/features\n\nError in eval(expr, envir, enclos): object 'hex_spatial_sf' not found\n\nhex_spatial_sf &lt;- hex_spatial_sf %&gt;% # Create new variables: name (defined as the google_name after removing \"(United States)\"), and abbr (the state abbreviation from variable iso3166_2)\n    mutate(\n        name = str_replace(google_name,' \\\\(United States\\\\)',''),\n        abbr = iso3166_2\n    )\n\nError in eval(expr, envir, enclos): object 'hex_spatial_sf' not found\n\nhead(hex_spatial_sf) # Ends with sf object with 51 regions and 9 variables/features\n\nError in eval(expr, envir, enclos): object 'hex_spatial_sf' not found\n\n\n\n\n# Chunk C\nhex_growth_df &lt;- left_join(hex_spatial_df, pop_growth, by = 'name')\nhex_growth_sf &lt;- left_join(hex_spatial_sf, pop_growth, by = 'name')\n\n\nANSWER (Chunk C):\n\n\n\nSolution\n\n\n# Chunk C\n\nhex_growth_df &lt;- left_join(hex_spatial_df, pop_growth, by = 'name') # Add in pop_growth variables to data frame using left_join; in the process duplicate the geometry for each region for each year\n\nError in eval(expr, envir, enclos): object 'hex_spatial_df' not found\n\nhead(hex_growth_df)\n\nError in eval(expr, envir, enclos): object 'hex_growth_df' not found\n\ndim(hex_growth_df) # end with data frame of 4284 rows and 18 variables\n\nError in eval(expr, envir, enclos): object 'hex_growth_df' not found\n\nhex_growth_sf &lt;- left_join(hex_spatial_sf, pop_growth, by = 'name') # add in pop_growth variables to sf object using left join; in the process duplicate the geometry for each region for each year \n\nError in eval(expr, envir, enclos): object 'hex_spatial_sf' not found\n\nhead(hex_growth_sf)\n\nError in eval(expr, envir, enclos): object 'hex_growth_sf' not found\n\ndim(hex_growth_sf) #end with sf object of 612 region/year combinations and 19 variables\n\nError in eval(expr, envir, enclos): object 'hex_growth_sf' not found\n\n\n\n\n# Chunk D\ncenters &lt;- data.frame(\n    rgeos::gCentroid(hex_spatial,byid = TRUE), \n    abbr = hex_spatial$iso3166_2\n)\n  \nhex_growth_df %&gt;% \n    filter(year == 2020) %&gt;%\n    ggplot(aes(x = long, y = lat)) +\n        geom_polygon(aes(group = group, fill = percent_change_in_resident_population)) + \n        geom_text(data = centers, aes( x = x, y = y, label = abbr), color = 'white') +\n        labs(fill = 'Population Change (%)') + \n        ggthemes::theme_map() + theme(legend.position = 'bottom', legend.justification = 'right')\n\n\nANSWER (Chunk D):\n\n\n\nSolution\n\n\n# Chunk D\ncenters &lt;- data.frame(\n    rgeos::gCentroid(hex_spatial,byid = TRUE), # Create data frame of the center of each region and the state abbreviation\n    abbr = hex_spatial$iso3166_2\n)\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'row.names': object 'hex_spatial' not found\n\nhex_growth_df %&gt;% \n    filter(year == 2020) %&gt;% # focus only on the data from 2020\n    ggplot(aes(x = long, y = lat)) + # create frame of longitude and latitude\n        geom_polygon(aes(group = group, fill = percent_change_in_resident_population)) +  # add hex polygons defined by x and y but grouped according to group and color filled by the percent_change in resident population\n        geom_text(data = centers, aes( x = x, y = y, label = abbr), color = 'white') + # add text at the centers of the polygons and add text labels from the abbr variable in the centers data we created\n        labs(fill = 'Population Change (%)') +  # change legend label\n        ggthemes::theme_map() + theme(legend.position = 'bottom', legend.justification = 'right') # remove the background theme and move the legend to the bottom right\n\nError in eval(expr, envir, enclos): object 'hex_growth_df' not found\n\n\n\n\n# Chunk E\nhex_growth_sf %&gt;% \n    filter(year == 2020) %&gt;%\n    ggplot() +\n        geom_sf(aes(fill = percent_change_in_resident_population)) + \n        geom_sf_text( aes(label = abbr), color = 'white') +\n        labs(fill = 'Population Change (%)') + \n        ggthemes::theme_map() + theme(legend.position = 'bottom', legend.justification = 'right')\n\n\nANSWER (Chunk E):\n\n\n\nSolution\n\n\n# Chunk E\nhex_growth_sf %&gt;%  # start with sf object\n    filter(year == 2020) %&gt;% #filter to focus on data from 2020\n    ggplot() +\n        geom_sf(aes(fill = percent_change_in_resident_population)) + # plot the sf geometry (polygons) and fill color according to percent change in population\n        geom_sf_text( aes(label = abbr), color = 'white') + # add text labels to the sf geometry regions using abbr for the text\n        labs(fill = 'Population Change (%)') + # Change legend label\n        ggthemes::theme_map() + theme(legend.position = 'bottom', legend.justification = 'right') # remove the background theme and move the legend to the bottom right \n\nError in eval(expr, envir, enclos): object 'hex_growth_sf' not found\n\n\n\n\n\nExercise 10\nUsing the hexbin spatial boundaries and the pop_growth data, make the following updates to the choropleth graphic:\n\nChange the outcome variable (different year or variable).\nChange the fill scale to be more meaningful and effective.\nMake one more update beyond the fill color to improve the effectiveness of the graphic.\n\nMake the graphic twice, once with geom_polygon() and once with geom_sf().\n\n\nExample Solution\n\n\nhex_growth_df %&gt;% \n    ggplot(aes(x = long, y = lat)) + # create frame of longitude and latitude\n        geom_polygon(aes(group = group, fill = change_in_number_of_representatives)) +  # add hex polygons defined by x and y but grouped according to group and color by change in number of representatives\n        # geom_text(data = centers, aes( x = x, y = y, label = abbr), color = 'white') + # add text at the centers of the polygons and add text labels from the abbr variable in the centers data we created\n        facet_wrap(~ year, ncol = 3) +\n        labs(fill = 'Population Change (%)') +  # change legend label\n        ggthemes::theme_map() + theme(legend.position = 'bottom', legend.justification = 'right') # remove the background theme and move the legend to the bottom right\n\nError in eval(expr, envir, enclos): object 'hex_growth_df' not found\n\nhex_growth_sf %&gt;%  # start with sf object\n    ggplot() +\n        geom_sf(aes(fill = change_in_number_of_representatives)) + # plot the sf geometry (polygons) and fill color according to change in number of representatives\n        # geom_sf_text( aes(label = abbr), color = 'white') + # add text labels to the sf geometry regions using abbr for the text\n        facet_wrap(~ year, ncol = 3) +\n        labs(fill = 'Population Change (%)') + # Change legend label\n        ggthemes::theme_map() + theme(legend.position = 'bottom', legend.justification = 'right') # remove the background theme and move the legend to the bottom right\n\nError in eval(expr, envir, enclos): object 'hex_growth_sf' not found\n\n\n\n\n\nBonus Challenge\nFind external state-level data online, read it into R, join it, and create a U.S. state hexbin map displaying that new state-level outcome."
  },
  {
    "objectID": "03-adv-maps.html#mn-citycounty-example",
    "href": "03-adv-maps.html#mn-citycounty-example",
    "title": "Advanced Spatial Visualizations",
    "section": "MN City/County example",
    "text": "MN City/County example\n\n\n\n\n\n\nStop to Reflect\n\n\n\n\n\nWhen looking through code examples, notice familiar functions and syntax patterns. Also, notice new functions and try figure out what they are doing.\nAdd comments to the code so that you can come back to the examples when you need them.\n\n\n\n\nUnifying CRSs across different spatial datasets\nTo demonstrate other spatial geometries beyond polygons (the hexagons in the last example were spatial polygons), we’ll walk through create a map of MN with different layers of information (city point locations, county polygon boundaries, rivers as lines and polygons, and a raster elevation map). To add all of this information on one map, we need to ensure that the CRS is the same for all spatial datasets.\n\n# Check CRS\nst_crs(mn_cities)\n\nError in eval(expr, envir, enclos): object 'mn_cities' not found\n\n# Check CRS\nst_crs(mn_water)\n\nError in eval(expr, envir, enclos): object 'mn_water' not found\n\n# (They're both NAD83 / UTM zone 15N but we'll transform anyway)\n\n# Transform CRS of water to the same of the cities\nmn_water &lt;- mn_water %&gt;%\n    st_transform(crs = st_crs(mn_cities))\n\nError in eval(expr, envir, enclos): object 'mn_water' not found\n\n\n\n# Load country boundaries data as sf object\nmn_counties &lt;- us_counties(resolution = \"high\", states = \"Minnesota\")\n\n# Remove duplicate column names\nnames_counties &lt;- names(mn_counties)\nnames(mn_counties)[names_counties == 'state_name'] &lt;- c(\"state_name1\", \"state_name2\")\n\n# Check CRS\nst_crs(mn_counties)\n\nCoordinate Reference System:\n  User input: EPSG:4326 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n\n# (They're different!)\n\n# Transform the CRS of county data to the more local CRS of the cities\nmn_counties &lt;- mn_counties %&gt;%\n  st_transform(crs = st_crs(mn_cities))\n\nError: object 'mn_cities' not found\n\nst_crs(mn_counties)\n\nCoordinate Reference System:\n  User input: EPSG:4326 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n\n\n\n\nInitial map: counties and cities\n\nggplot() + # plot frame\n    geom_sf(data = mn_counties, fill = NA) + # county boundary layer\n    geom_sf(data = mn_cities, size = 0.5) + # city point layer\n    ggthemes::theme_map()\n\nError in eval(expr, envir, enclos): object 'mn_cities' not found\n\n\n\nggplot() +\n    geom_sf(data = mn_counties, fill = \"wheat\", color = \"tan\") + \n    geom_sf(data = mn_cities %&gt;% filter(Population &gt;= 10000), mapping = aes(color = Population, size = Population), alpha = 0.8)+ #cities layer\n    scale_color_viridis_c() + # continuous (gradient) color scale\n    labs(title = \"Minnesota Cities with Population &gt;= 10,000\") + \n    ggthemes::theme_map() + theme(legend.position = \"bottom\")  #move legend\n\nError in eval(expr, envir, enclos): object 'mn_cities' not found\n\n\n\n\nUpdated map: counties and cities plus elevation\n\nelevation &lt;- elevatr::get_elev_raster(mn_counties, z = 5, clip = 'bbox')\nraster::crs(elevation) &lt;- sf::st_crs(mn_counties)\n\n# Convert to Data Frame for plotting\nelev_df &lt;- elevation %&gt;% terra::as.data.frame(xy = TRUE)\nnames(elev_df) &lt;-c('x','y','value')\n\nggplot() +\n    geom_raster(data = elev_df, aes(x = x,y = y,fill = value)) + # adding the elevation as first (bottom) layer\n    geom_sf(data = mn_counties, fill = NA, color = \"black\") + \n    geom_sf(data = mn_cities %&gt;% filter(Population &gt;= 10000), mapping = aes(color = Population,size = Population), alpha = 0.8)+ #cities layer\n    scale_color_viridis_c() + #continuous (gradient) color scale\n    scale_fill_gradient(low = 'darkgreen',high = 'white', guide = FALSE) + \n    labs(title = \"Minnesota Cities with Population &gt;= 10,000\") + \n    ggthemes::theme_map() + theme(legend.position = \"bottom\")  #move legend\n\nError in eval(expr, envir, enclos): object 'mn_cities' not found\n\n\n\n\nUpdated map: zoom in to Twin Cities\n\nseven_countyarea &lt;- st_bbox(mn_counties %&gt;% filter(name %in% c(\"Anoka\", \"Hennepin\", \"Ramsey\", \"Dakota\", \"Carver\", \"Washington\", \"Scott\")))\n\n\nelevation &lt;- elevatr::get_elev_raster(mn_counties %&gt;% st_crop(seven_countyarea), z = 9, clip = 'bbox')\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'addAttrToGeom': conversion from feature type sfc_GEOMETRY to sp is not supported\n\nraster::crs(elevation) &lt;- sf::st_crs(mn_counties)\n\n# Convert to data frame for plotting\nelev_df &lt;- elevation %&gt;% terra::as.data.frame(xy = TRUE)\nnames(elev_df) &lt;-c('x','y','value')\n\nggplot() +\n    geom_raster(data = elev_df, aes(x = x,y = y,fill = value)) + \n    geom_sf(data = mn_counties, fill = NA, color = \"black\") + # county boundary layer\n    geom_sf(data = mn_water, fill = 'lightsteelblue1',color = 'lightsteelblue1') + # added a river/lake layer\n    geom_sf(data = mn_cities %&gt;% filter(Population &gt;= 10000), mapping = aes(color = Population,size = Population)) + # cities layer\n    coord_sf(xlim = seven_countyarea[c(1,3)], ylim = seven_countyarea[c(2,4)]) + # crop map to coordinates of seven county area\n    scale_color_viridis_c(option = 'magma') + # continuous (gradient) color scale\n    scale_fill_gradient(low = 'darkgreen',high = 'white') + # continuous (gradient) fill scale\n    labs(title = \"Twin Cities with Population &gt;= 10,000\") + \n    ggthemes::theme_map() + theme(legend.position = \"none\")  # remove legend\n\nError in eval(expr, envir, enclos): object 'mn_water' not found\n\n\n\n\nTwin Cities Leaflet\nBelow we show how to make the MN counties map in the leaflet package.\n\nlibrary(leaflet)\n\nmn_counties_leaf &lt;- mn_counties %&gt;% st_transform(4326) # Leaflet expects this CRS for vectors\nmn_cities_leaf &lt;- mn_cities %&gt;% st_transform(4326) # Leaflet expects this CRS for vectors\n\nCities_per_County &lt;- st_join(mn_cities_leaf, mn_counties_leaf) %&gt;%\n  st_drop_geometry() %&gt;% #removes geometry - makes the following calculation more efficient \n  count(name) \n\nmn_counties_leaf %&gt;% \n    filter(name %in% c(\"Anoka\", \"Hennepin\", \"Ramsey\", \"Dakota\", \"Carver\", \"Washington\", \"Scott\")) %&gt;%\n    left_join(Cities_per_County) %&gt;%\n    leaflet() %&gt;% \n    addProviderTiles(\"CartoDB.Positron\") %&gt;% \n    addPolygons(color = \"#444444\", weight = 1, smoothFactor = 0.5,\n    opacity = 1.0, fillOpacity = 0.5, fillColor = ~colorQuantile(\"YlOrRd\", n)(n), highlightOptions = highlightOptions(color = \"white\", weight = 2,\n      bringToFront = TRUE)) %&gt;%\n    addCircles(data = mn_cities_leaf %&gt;% filter(County %in% paste(c(\"Anoka\", \"Hennepin\", \"Ramsey\", \"Dakota\", \"Carver\", \"Washington\", \"Scott\"),'County')), color = \"#444444\")"
  },
  {
    "objectID": "03-adv-maps.html#open-ended-exercise-homework",
    "href": "03-adv-maps.html#open-ended-exercise-homework",
    "title": "Advanced Spatial Visualizations",
    "section": "Open-ended Exercise (Homework)",
    "text": "Open-ended Exercise (Homework)\nThe following exercises will use census tract tidycensus data for Ramsey and Hennepin county and Crash.csv (2019-2022) from the pedestrian/bike crash database for St. Paul within Ramsey county in the Twin Cities. We provide several variables that you can choose from in order to create maps that best fit your interest.\nLoad the data with the following code:\n\ncensus2020 &lt;- tidycensus::get_acs(year = 2020, state = \"MN\", geography = \"tract\", variables = c(    \n\"B01003_001\", \"B19013_001\", \"B23006_023\", \"B25058_001\", \"B25107_001\", \"B25003_001\", \"B25003_002\", \"B25003_003\", \"B25077_001\"), output = 'wide', geometry = TRUE) %&gt;%\n  filter(word(NAME, 4) %in% c(\"Ramsey\",\"Hennepin\"))%&gt;%\n               mutate(tract = word(NAME, 3),\n                      tract = str_remove(tract, \",\"),\n                      county = word(NAME, 4)) %&gt;%\n               select(-NAME) %&gt;%\n               rename(\"population\" = \"B01003_001E\", \n                      \"medianIncome\" = \"B19013_001E\", \n                      \"bachelors\" = \"B23006_023E\",\n                      \"medContractRent\" = \"B25058_001E\", \n                      \"tenureTotal\" = \"B25003_001E\", \n                      \"tenureOwned\" = \"B25003_002E\", \n                      \"tenureRented\" = \"B25003_003E\",\n                      \"medianHomeValue\"= \"B25077_001E\") %&gt;%\n  select(-contains(\"_\"))\n\ncrashes &lt;- read_csv(\"https://lmyint.github.io/212_fall_2023/data/Crash.csv\") %&gt;%\n    filter(!is.na(Latitude), !is.na(Longitude))\n\n\nExercise: Joining and aggregation\nCreate a map of crashes per census tract in Ramsey county.\nFirst, transform the crashes data frame to a sf object have a point geometry using the code below.\n\ncrashes &lt;- st_as_sf(crashes, coords = c(\"Longitude\", \"Latitude\"), crs = \"NAD83\")\n\nCheck the CRS are the same for census2020 and crashes using st_crs() and transform if needed.\n\n# code here\n\nJoin the crashes and census dataset together and count the number of crashes per census tract. The function st_join can join to spatial data sets according to whether the spatial geometries of the right table intersect with the spatial geometries of the left table.\n\ncrashes_per_tract &lt;- st_join(??,??) %&gt;%\n    st_drop_geometry() %&gt;% # removes geometry - makes the following calculation more efficient \n    filter(!is.na(Accident_Datetime)) %&gt;%\n    count(??) \n\nJoin the census data with crashes_per_tract and then use a filter of n &gt; 0 to only keep the census tracts where crashes were recorded instead of all of Ramsey and Hennepin County.\n\ncrashes_per_tract_geo &lt;- ??? %&gt;% # sf object with census geometry goes first\n    left_join(??, by = ??) %&gt;%\n    filter(n &gt; 0)\n\nCreate the plot!!\n\nggplot() +\n    geom_sf(???) +\n    scale_fill_gradientn(colours = c(\"lightcyan\", \"lightcyan2\", \"lightskyblue3\", \"lightskyblue4\"))+\n    labs(fill = \"Crashes\", color = \"\", title = \"Number of pedestrian/bike crashes per census tract\") +\n    ggthemes::theme_map() + theme(legend.position = \"bottom\")\n\n\n\nExercise: Adding layers\nPlot a variable of your choice for census tracts in Hennepin and Ramsey County and add roads to the map.\nStart by downloading a shape file. For example, you could search for “Minnesota roads shape file”. For this example, visit this site and download the Shapefile Zip File. Unzip the file and put the folder in the same location as this Rmd file.\nLoad in the shapefile using st_read() and transform roads to have the same CRS as census2020 if necessary.\n\nroads &lt;- sf::st_read(\"tl_2019_27_prisecroads\")\n\n# Check CRS of roads and transform if necessary\n\nStart by using st_crop() to crop the roads map to the area we are interested in (Hennepin and Ramsey County).\n\nroads_sub &lt;- st_crop(roads,st_bbox(census2020))\n\nCreate the map!!\n\nggplot() +\n    geom_sf(??)+ #put census tracts on map and fill by your variable of interest\n    geom_sf(?? ,fill = \"gray\", color = \"gray\", lwd = 0.2)+ #roads data here\n    labs(??)+ # add labels to fit your variables \n    scale_fill_gradientn(colours = c(\"lightcyan\", \"lightcyan2\", \"lightskyblue3\", \"lightskyblue4\"))+ # change to preferred color palette\n    theme_classic()+\n    theme(axis.line = element_blank(), \n        axis.text = element_blank(),\n        axis.ticks = element_blank(),\n        legend.position = \"bottom\", \n        plot.title.position = \"plot\", \n        plot.title = element_text(size = 8), \n        plot.subtitle = element_text(size = 8))\n\nHow to cite AI and other resources: If you use AI tools like ChatGPT or Google Bard, please copy and paste all prompts and output into an “Appendix” section of this assignment. If you use an AI tool, also list one environmentally-friendly action you could adopt (that you don’t already do) to offset the energy usage. Also list any websites used in this Appendix.\nSubmission details: Click the “Render” button to create an HTML report from your Quarto file. Open the HTML in your web browser and save the webpage as a PDF (Ctrl-P/Command P, choose “Save as PDF” as the Destination). Submit this PDF on Moodle AND the .qmd file by midnight on Wednesday, 9/20."
  },
  {
    "objectID": "03-adv-maps.html#additional-resources",
    "href": "03-adv-maps.html#additional-resources",
    "title": "Advanced Spatial Visualizations",
    "section": "Additional Resources",
    "text": "Additional Resources\n\nSpatial Data Science https://r-spatial.org/book/\nLeaflet in R https://rstudio.github.io/leaflet/"
  },
  {
    "objectID": "04-interactive-viz.html",
    "href": "04-interactive-viz.html",
    "title": "Interactive visualization",
    "section": "",
    "text": "After this lesson, you should be able to:\n\nEvaluate when it would be useful to use an interactive visualization or an animation and when it might not be necessary\nConstruct interactive visualizations and animations with plotly\nBuild a Shiny app that enables user to adjust visualization choices and explore linked visualizations\n\n\nSlides for today are available here. (For our main activity, we will be using the rest of the webpage below.)"
  },
  {
    "objectID": "04-interactive-viz.html#why-use-interactivity",
    "href": "04-interactive-viz.html#why-use-interactivity",
    "title": "Interactive visualization",
    "section": "Why use interactivity?",
    "text": "Why use interactivity?\nPros\n\nUsers can click, hover, zoom, and pan to get more detailed information\nUsers can get quickly and deeply explore the data via linked data representations\nAllows guided exploration of results without needing to share data\n\nCons\n\nTakes longer to design\nAnalyst might spend longer exploring an interactive visualization than a series of static visualizations\nPoor design could result in information overload"
  },
  {
    "objectID": "04-interactive-viz.html#common-features-of-interactive-visualizations",
    "href": "04-interactive-viz.html#common-features-of-interactive-visualizations",
    "title": "Interactive visualization",
    "section": "Common features of interactive visualizations",
    "text": "Common features of interactive visualizations\nCommon features of interactive visualizations include (reference):\n\nChanging data representation: providing options to change the type of plot displayed (e.g., allowing users to visualize temperature patterns over a month vs. over years)\nFocusing and getting details: mousing over part of a visualization to see an exact data value, zooming and panning\nData transformation: e.g., changing color scale, switching to/from log scale\nData selection and filtering: highlighting and brushing regions of a plot to focus the selected points; reordering and filtering data show in tables\nFinding corresponding information in multiple views: linked views that update dynamically based on interaction in another plot (often by zooming, panning, or selecting certain points)"
  },
  {
    "objectID": "04-interactive-viz.html#exercise-0-app-planning",
    "href": "04-interactive-viz.html#exercise-0-app-planning",
    "title": "Interactive visualization",
    "section": "Exercise 0: App planning",
    "text": "Exercise 0: App planning\nCatalog the app’s layout and interactivity features as part of the app planning phase.\n\nNavigator: Open up the neighborhood diversity app for reference. The Navigator should explore the interactive features of the app and help the Driver sketch out a schematic of the app.\nDriver: Sketch the layout and general features of the app as the Navigator navigates. Draw arrows to indicate what parts of the app update in response to user input.\n\n\n\n\n\n\n\nReflect: App design\n\n\n\n\n\nIs the interactivity in this app needed? Does the interactivity actually help you gain more insight (and perhaps more efficiently) than a series of static visualizations? What static visualizations might be more useful?"
  },
  {
    "objectID": "04-interactive-viz.html#exercise-1-setup-and-getting-acquainted",
    "href": "04-interactive-viz.html#exercise-1-setup-and-getting-acquainted",
    "title": "Interactive visualization",
    "section": "Exercise 1: Setup and getting acquainted",
    "text": "Exercise 1: Setup and getting acquainted\nSetup part 1: Load required packages at the top of app.R: shiny, tidyverse, sf, and plotly.\nSetup part 2: Data download and folder setup\nNavigate to the “Data for interactive viz activity” folder on Moodle and save the two files with the folder setup below:\n\n📂 YOUR_CLASS_FOLDER\n\n📂 interactive_viz\n\n📂 neighborhood_diversity\n\napp.R\n📂 data\n\ndata_by_dist.rds\ndata_by_year.csv\n\n\n\n\n\nSetup part 3: Below your library() calls, add the following commands to read in the data:\n\ndata_by_dist &lt;- read_rds(\"Enter the correct relative path to data_by_dist.rds\")\ndata_by_year &lt;- read_csv(\"Enter the correct relative path to data_by_year.csv\")\n\nGetting acquainted with the app and underlying code: Open this PDF or have the code printout distributed at the start of class in front of you. Also have the app running in your browser.\n\nDraw lines on the printout/PDF of what visual parts of the app correspond to which parts of code.\nWhat names/labels in the User Interface (ui) part of the app seem to be shared with the server part of the app? (Draw lines between the ui and server parts of the code.)\n\n\n\n\n\n\n\nStop to Share\n\n\n\n\n\nAs you work on the “Getting acquainted” part of this exercise, share with your partner some struggles you have with code and some strategies that you have tried."
  },
  {
    "objectID": "04-interactive-viz.html#input-functions",
    "href": "04-interactive-viz.html#input-functions",
    "title": "Interactive visualization",
    "section": "*Input() functions",
    "text": "*Input() functions\n\nBackground\nThe *Input() functions collect inputs from the user. The various types are listed on the right-hand side of the first page of the cheatsheet. You will list all the *Input() functions you want to use with their accompanying arguments inside the fluidPage() function in the ui portion. Separate the *Input() functions with commas.\nIn all the *Input() functions, the first two arguments are the same:\n\ninputId is how you will refer to this input in the server portion later\nlabel is how this will actually be labeled in your UI (what text shows up in the app)\n\nEach function has some additional arguments depending what you want to do.\n\n\nExercise 2: Add *Input()s\nAdd the following two user inputs to your app:\n\nDropdown to select the city name\nSlider to choose the span parameter for the scatterplot smooth\n\nUse the Shiny cheatsheet to find the *Input() functions that correspond to the two inputs above. Add them to the appropriate place within the ui object. Use commas to separate the inputs. You will have to look at the documentation for the *Input() functions to know how to use arguments beyond inputId and label. To view this documentation, type ?function_name in the Console.\nTo get the collection of city names from the data_by_dist dataset, you can use the pull() and unique() functions. Save the city names in an object called metro_names—this code can go just beneath where you read in the data.\nOnce you finish, run your app. Make sure you can select and move things around as expected. You won’t see any plots yet–we’ll work on those in the next exercises."
  },
  {
    "objectID": "04-interactive-viz.html#output-functions",
    "href": "04-interactive-viz.html#output-functions",
    "title": "Interactive visualization",
    "section": "*Output() functions",
    "text": "*Output() functions\n\nBackground\n*Output() functions in the ui portion work with the render*() functions in the server portion to to add R output to the UI. The *Output() functions are listed in the bottom center part of the first page of the cheatsheet.\nAll the *Output() functions have the same first argument, outputId, which is used how you will refer to this output in the server portion later (like the inputId in the *Input() functions).\n\n\nExercise 3: Add *Output()s\nAdd 3 plotOutput()s to the ui that will eventually be:\n\nA scatterplot of diversity score (entropy) versus distance to city hall (distmiles) with a smoothing line (smoothness controlled by the span parameter on your slider input)\nA map of diversity scores across the counties in the selected city\nA bar chart of the overall race distribution in the selected city (i.e., the total number of people in each race category in the city)\n\nFor now, don’t worry that the layout of the plots exactly matches the original neighborhood diversity app. (You will update this in your homework.)\nRun the app with the output. Notice that nothing really changes. Think of the outputs you just placed as placeholders—the app knows there will be a plot in the UI, but the details of what the plots will look like and the R code to create them will be in the server portion. Let’s talk about that now!"
  },
  {
    "objectID": "04-interactive-viz.html#render-functions",
    "href": "04-interactive-viz.html#render-functions",
    "title": "Interactive visualization",
    "section": "render*() functions",
    "text": "render*() functions\nThe render*() functions go in the server function of the app. The render*() functions use R code (i.e., standard ggplot code) to communicate with (“listen to”) the user inputs to create the desired output.\nThe render*() function you use will depend on the desired output. The bottom center of the cheatsheet shows how *Output() and render*() functions connect.\nIn general, the server section of code will look something like this:\n\nserver &lt;- function(input, output) {\n    output$outputId_of_interest &lt;- render*({ # Note the curly braces that enclose the R code below\n        # R code that creates the output and calls various input$InputId's\n    })\n}\n\nExample: Suppose that inside ui, we used plotOutput(outputId = \"timeplot\"):\n\nIn the server function, we would use output$timeplot &lt;- renderPlot({...}).\n\nThe ... would be replaced by detailed R plotting code.\nTo reference the inputs we create in the ui, we use input$inputID_name. e.g., if we had an *Input() with inputId = \"years\", we would use input$years in the server function.\n\n\n\nExercise 4: Add renderPlot()\nWhile our main goals is to make 3 plots, you will just make one of them in this exercise.\nAdd a renderPlot() functions inside the server portion of the code to make the scatterplot of diversity score (entropy) versus distance to city hall (distmiles) with a smoothing line. Reference the inputs you’ve already created in previous exercises by using filter() and ggplot() to render the desired interactive plot.\nNote: the geom_??? used to create the smoothing line has a span parameter. (Check out the documentation for that geom by entering ?geom_??? in the Console.)\nRun the app and check that the scatterplot displays and reacts to the chosen city and span parameter.\n\n\n\n\n\n\nStop to Reflect\n\n\n\n\n\nWhat challenges are you encountering as we go through this new material? What parts of your interactions with your partner have been helpful or less helpful for your learning today?"
  },
  {
    "objectID": "04-interactive-viz.html#exercise-5-turn-plots-into-plotlys",
    "href": "04-interactive-viz.html#exercise-5-turn-plots-into-plotlys",
    "title": "Interactive visualization",
    "section": "Exercise 5: Turn plots into plotlys",
    "text": "Exercise 5: Turn plots into plotlys\nIn a web application, having plots be plotly objects is just nice by default because of the great mouseover, zoom, and pan features.\nInside app.R, change all instances of plotOutput to plotlyOutput and all instances of renderPlot to renderPlotly. Make sure to add calls to ggplotly() too."
  },
  {
    "objectID": "homework1.html",
    "href": "homework1.html",
    "title": "Homework 1",
    "section": "",
    "text": "Required parts\nGetting acquainted with Git and GitHub\nNothing to turn in for this section, but please do the following:\n\nWatch this video and follow along with the tutorial linked in the description.\nRead this tutorial to get more familiar with version control terminology.\n\n\nAsynchronous skills challenges\n\nAdvanced visualization with ggplot2 - Challenge 1: Navigate to the challenge on GitHub. This challenge involves finishing the plot that we started in our Advanced Data Visualization in ggplot2 class activity.\n\n\nPreparing for Skills Session 1\n\nSkills Session 1 is coming up the week of 2/5. The topic of this session is keyboard shortcuts. It’s a good idea to prepare for this session as soon as possible because the benefits of being fluent with keyboard shortcuts will be immediately useful, and it will take time to practice these shortcuts.\nStart preparing for this session by visiting the Skills Session 1 page.\n\n\nSetting up your personal website\nNothing to turn in for this section, but please do the following:\n\nFollow this guide written by Professor Brianna Heggeseth to set up your personal website (your digital portfolio) using Quarto.\n\n\n\n\nOptional\nIf you are aiming for an A in the course, recall from our syllabus that participating in 5 Tidy Tuesday challenges can move you toward this goal.\n\nFor further all-around practice, I encourage you to participate in the most recent Tidy Tuesday challenge."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT/COMP 212: Intermediate Data Science (Spring 2024)",
    "section": "",
    "text": "This is the course website for STAT/COMP 212: Intermediate Data Science at Macalester College for the Spring 2024 semester taught by Professor Leslie Myint. Materials were developed by Leslie Myint and multiple faculty members in the Macalester MSCS department.\n\nDrop-in (office) hours\nLeslie\n\nWhere? OLRI 232\nWhen? TBD\n\nI’m also happy to meet one-on-one if my normal drop-in hours don’t work. You can schedule a time to meet with me via Calendly.\nKyle\n\nWhere? TBD\nWhen? TBD\n\nNa\n\nWhere? TBD\nWhen? TBD\n\nGraham\n\nWhere? TBD\nWhen? TBD"
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "10/17",
    "text": "10/17\n\nHomework 5 is a set of practice exercises on writing functions. This is due Wednesday 10/18.\nMake note of the first project progress presentation on 10/24. Your homework this week is to work on your progress presentation. (Presentation requirements can be found under Milestone 3 on the Project page.)"
  },
  {
    "objectID": "index.html#section-1",
    "href": "index.html#section-1",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "10/12",
    "text": "10/12\n\nHomework 5 is a set of practice exercises on writing functions. This is due next Wednesday, 10/18.\nMake note of the first project progress presentation on 10/24.\nBefore class on Tuesday, install the following packages:\n\n\ninstall.packages(c(\"jsonlite\", \"urltools\"))\n# install.packages(\"devtools\") # Install devtools if you haven't already\ndevtools::install_github(\"mkearney/nytimes\")"
  },
  {
    "objectID": "index.html#section-2",
    "href": "index.html#section-2",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "10/3",
    "text": "10/3\n\nProject Milestone 2 can be turned in this Wednesday 10/4 or next Wednesday 10/11\nReflection 1 is due next Wednesday 10/11. (I’m still finishing writing out the prompts–I’ll send a Moodle message later today when it’s ready.)\nCheck out our Schedule.\n\nOn Thursday we’ll talk about writing functions.\nNext week we’ll talk about loops and iteration.\nMake note of Project progress presentations on 10/24 and 11/16."
  },
  {
    "objectID": "index.html#section-3",
    "href": "index.html#section-3",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/28",
    "text": "9/28\n\nI thought we might be able to cover wrangling factors today, but we’ll save that for next Tuesday.\nLook at the updated Schedule page. The readings there are excellent references and can be read before or after class on Tuesday."
  },
  {
    "objectID": "index.html#section-4",
    "href": "index.html#section-4",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/26",
    "text": "9/26\n\nIf you haven’t already found an initial dataset, peruse the Tidy Tuesday repository for ideas.\n\nHomework 4 (due next Wednesday 10/4) is to complete Project Milestone 2.\n\nThursday topics: wrangling strings (with regular expressions) and factors\nIn place of a standard Homework 5, we will have the first of 3 substantive reflections."
  },
  {
    "objectID": "index.html#section-5",
    "href": "index.html#section-5",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/19",
    "text": "9/19\n\nOn Thursday:\n\nWe will spend the first 30 moving our course projects moving forward.\nIn the last hour of class, facilitators will come in to run an activity for the Classroom Community and Connectedness Survey. (I will be leaving.) A reminder of why this activity is important to me from our syllabus:\n“A sense of community and connectedness can provide a powerful environment for learning: Research shows that learning is maximized when students feel a sense of belonging in the educational environment (e.g., Booker, 2016). A negative climate may create barriers to learning, while a positive climate can energize students’ learning (e.g., Pascarella & Terenzini, cited in How Learning Works, 2012).”"
  },
  {
    "objectID": "index.html#section-6",
    "href": "index.html#section-6",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/14",
    "text": "9/14\n\nBefore next Tuesday’s class\n\nCheck the Schedule page. There is a short podcast segment (~7 min) to listen to and one guiding question to answer. This podcast segment shares a bit of wisdom about when it is/isn’t useful to make fancy visualizations.\nInstall the shiny and plotly packages. Post on the #questions channel on Slack if you run into problems. (Share your commands and error messages.)\n\nNext Thursday we will be having facilitators come in for the last hour of class for the Classroom Community and Connectedness Survey. (I will be leaving.)\n\nWe will use the first 30 to get our course projects moving forward."
  },
  {
    "objectID": "index.html#section-7",
    "href": "index.html#section-7",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/12",
    "text": "9/12\n\nHomework 1 due Wednesday at midnight (Finishing up the temperature + precipitation plots from last Tuesday)\n\nUpdated submission instructions can be found here. (Also in the most recent Moodle announcement.)\n\nHomework 2 due next Wednesday, 9/20 has two parts:\n\nFinish Open-ended Exercise from today’s Advanced Map Visualization activity.\nComplete Milestone 1 of the course project\n\nThere is a final version of our syllabus that incorporates the learning goals and grading option that we discussed on our first day."
  },
  {
    "objectID": "index.html#section-8",
    "href": "index.html#section-8",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/7",
    "text": "9/7\n\nI’ll be adding a new version of the syllabus to our course website that incorporates our final choice for grading system and the learning goals that you contributed.\nComplete the pre-course survey by 3pm today to shape when I hold drop-in hours (office hours).\nLook at the updated Schedule page. We have Guiding Questions for next Tuesday’s class: advanced map visualization.\n\nNote that Guiding Questions never have to be turned in. Do answer them to the best of your ability before class. We’ll spend time at the start of class checking in on these."
  },
  {
    "objectID": "index.html#section-9",
    "href": "index.html#section-9",
    "title": "STAT/COMP 212: Intermediate Data Science (Fall 2023)",
    "section": "9/5",
    "text": "9/5\nTo do before class on Thursday:\n\nSet up R and RStudio using these instructions.\nJoin our Slack workspace.\n\nUpdate your Slack profile with preferred name, pronouns, name pronunciation. (To find your profile, click on your name under Direct Messages on the left menu, and click “Edit Profile”.)\nIntroduce yourself in the #general channel.\n\nComplete the pre-course survey.\nLook at the Guiding Questions for Thursday’s class on advanced ggplot2.\nTake a look at Homework 0.\n\nThis is a personal essay that doesn’t need to be turned in.\nTopic: Your 10-year vision\nMy hope is that writing this allows gives you more clarity on how to align what you do this semester (and beyond) with who/what/how you want to be.\n\nFinish writing your 12 favorite problems and post them in the #12-favorite-problems channel on Slack.\n\nWhen you connect with peers from Thursday onward, you’ll be using your 12FPs to get to know each other a bit first before working on activities together."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project",
    "section": "",
    "text": "The goal of the project is to build something awesome that you are proud to showcase on your personal website."
  },
  {
    "objectID": "project.html#milestone-1",
    "href": "project.html#milestone-1",
    "title": "Project",
    "section": "Milestone 1",
    "text": "Milestone 1\nDue date: Monday, February 12\nPurpose: The goal of Milestone 1 is to get the project moving early on in the semester to have time to make the final product as high quality as possible. You will form teams, lay the vision for your project, and make progress on that vision with one dataset.\nTask (requirements for passing this Milestone):\n\nForm project groups and pick a topic/scope\nDescribe 2-3 broad questions that you wish to explore within this topic. (Not all of them might be able to be investigated with the data source you find for this Milestone—that’s fine.)\nFind one data source, and read that data into R\nThoroughly describe the data context (who, what, when, where, why, and how? questions related to the dataset)\nWrite up a data codebook. That is, describe the type and meaning of the variables in your dataset. Group your variables into categories (e.g., demographic variables, neighborhood variables).\n\nIf you have a lot of variables, it may not be necessary/feasible to describe every variable individually. Rather, you can describe groups of similar variables.\n\nBased on the data context writeup and your codebook, describe which of your 2-3 broad questions can be addressed with your dataset and how.\n\nWrite a plan for addressing these questions. Make sure that the steps in this plan are reasonable to complete in 2 weeks for Milestone 2. You will receive feedback on this plan and will be expected to integrate this feedback for Milestone 2."
  },
  {
    "objectID": "project.html#milestone-2",
    "href": "project.html#milestone-2",
    "title": "Project",
    "section": "Milestone 2",
    "text": "Milestone 2\nDue date: Monday, February 26\nPurpose: The goal of Milestone 2 is to make progress on the goals you set out earlier and get tailored feedback on next steps to make the final product as high quality as possible.\nTask (requirements for passing this Milestone):\n\nComplete the steps in your plan from Milestone 1 (the plan with feedback from the instructional team)\nWrite a plan for further pursuing your 2-3 broad questions. Make sure that the steps in this plan are reasonable to complete in 2 weeks for Milestone 3. You will receive feedback on this plan and will be expected to integrate this feedback for Milestone 3. Questions to think about as you develop this plan:\n\nDo your 2-3 original broad questions need to be revised?\nIs it time to start looking for additional datasets?"
  },
  {
    "objectID": "project.html#milestone-3",
    "href": "project.html#milestone-3",
    "title": "Project",
    "section": "Milestone 3",
    "text": "Milestone 3\nDue date: Friday, March 8 (day before Spring Break)\nPurpose: The goal of Milestone 3 is to make progress on the goals you set out earlier and get tailored feedback on next steps to make the final product as high quality as possible.\nTask (requirements for passing this Milestone):\n\nComplete the steps in your plan from Milestone 2 (the plan with feedback from the instructional team)\nWrite a short blog post (no more than 1000 words) about your results so far. In this post, you should:\n\nMotivate the importance of the topic\nLead the reader through the rationale for the narrowing/focusing of the scope via the main 2-3 broad questions\nTie results (plots and modeling output) to the broad questions and explain how all results fit together\nEnd with main takeaways, limitations with regard to the data context and ethical considerations, and future directions"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Readings in the schedule below will sometimes be marked with abbreviations:\n\nR4DS refers to the online book R for Data Science (2e) by Wickham, Cetinkaya-Rundel, and Grolemund.\nIDSNotes refers to Intermediate Data Science Notes, a set of notes that I have written for this course.\n\nGuiding questions for pre-class readings and videos are available at the bottom of this page.\n\n\n\n  \n    Week\n    Tuesday\n    Thursday\n    Announcements\n  \n\n\n\n  \n    1\n    \n    \n    \n    \n      1/18: Welcome! Getting to know each other, brainstorming project ideas \n      Before class:\n      \n        Review the syllabus, and write down any questions you have.\n        Follow the Tech Setup directions.\n      \n    \n    \n    \n    \n  \n  \n  \n  \n  \n    2\n    \n    \n      1/23: Advanced visualization in ggplot2 \n      Before class:\n      \n        Review the construction of plots from STAT 112 and STAT 155 by answering the Guiding Questions at the bottom of this page.\n      \n    \n    \n    \n      1/25: File organization and paths, Git & GitHub \n      Before class:\n      \n        Read File organization, directory structure, and navigation in IDSNotes.\n        Work on the following parts of HW1: Getting acquainted with Git and GitHub, Preparing for Skills Session 1.\n      \n    \n    \n    \n      Turn in HW1 by midnight on Monday 1/29.\n    \n  \n  \n  \n  \n  \n    3\n    \n    \n      1/30: Advanced map visualization \n      Before class:\n      \n        Install the following R packages: ___\n        Watch this video on Coordinate Reference Systems, and answer the Guiding Questions at the bottom of this page.\n      \n    \n    \n    \n      2/1: Advanced map visualization (continued) \n      Before class:\n    \n    \n    \n      Turn in HW2 by midnight on Monday 2/5. Prepare for Skills Demonstration #1 next week (2/5-2/9).\n    \n  \n  \n  \n  \n  \n    4\n    \n    \n      2/6: Interactive visualization \n      Before class: Install the shiny and plotly R packages.\n    \n    \n    \n      2/8: Interactive visualization (continued) \n      Before class: \n    \n    \n    \n      Skills Demonstration #1 will be happening this week. Turn in HW3 (includes Project Milestone 1) by midnight on Monday 2/12.\n    \n  \n  \n  \n  \n  \n    5\n    \n    \n      2/13: Data wrangling \n      Before class: Read Chapters 13-18 in R4DS.\n    \n    \n    \n      2/15: Data wrangling and project work time \n      Before class: \n    \n    \n    \n      Turn in HW4 and Reflection 1 by midnight on Monday 2/19.\n    \n  \n  \n  \n  \n  \n    6\n    \n    \n      2/20: Statistical modeling and missing data \n      Before class: \n    \n    \n    \n      2/22: Writing functions \n      Before class: Read R4DS Chapter 26 (Functions) and RPDS Section 13.1 (if-else).\n    \n    \n    \n      Turn in HW5 (includes Project Milestone 2) by midnight on Monday 2/19.\n    \n  \n  \n  \n  \n  \n    7\n    \n    \n      2/27: Functions (continued) \n      Before class: \n    \n    \n    \n      2/29-3/1: Capstone Days! (No class but please attend talks to support your peers!)\n    \n    \n    \n      Schedule Skills Demonstration #2 for next week (3/4-3/8) via Calendly.\n    \n  \n  \n  \n  \n  \n    8\n    \n    \n      3/5: Loops and iteration \n      Before class: Read R4DS Chapter 27 (Iteration) and this tutorial.\n    \n    \n    \n      3/7: Loops and iteration (continued) \n      Before class: \n    \n    \n    \n      Skills Demonstration #2 will be happening this week. Turn in HW6 (includes Project Milestone 3) by midnight on FRIDAY 3/8.\n    \n  \n  \n  \n  \n  \n    9\n    \n      3/9-3/17: Spring Break!\n    \n  \n  \n  \n  \n  \n    10\n    \n    \n      3/19: Data acquisition: APIs \n      Before class: \n    \n    \n    \n      3/21: Data acquisition: APIs (continued) \n      Before class: \n    \n    \n    \n      Turn in HW7 and Reflection 2 by midnight on Monday 3/25.\n    \n  \n  \n  \n  \n  \n    11\n    \n    \n      3/26: Data acquisition: Scraping \n      Before class: Read the rvest vignette.\n    \n    \n    \n      3/28: Project work day \n      Before class: \n    \n    \n    \n      Turn in HW8 (includes Project Milestone 4) by midnight on Monday 4/1.\n    \n  \n  \n  \n  \n  \n    12\n    \n    \n      4/2: Data acquisition: databases \n      Before class: Read R4DS Chapter 22 (Databases).\n    \n    \n    \n      4/4: Data acquisition: databases (continued)\n    \n    \n    \n      Turn in HW9 by midnight on Monday 4/8.\n    \n  \n  \n  \n  \n  \n    13\n    \n    \n      4/9: Project work time\n    \n    \n    \n      4/11: Project work time\n    \n    \n    \n      Schedule Skills Demonstration #3 for next week (4/15-4/19) via Calendly.\n    \n  \n  \n  \n  \n  \n    14\n    \n    \n      4/16: Project work time\n    \n    \n    \n      4/18: Project work time\n    \n    \n    \n      Skills Demonstration #3 will be happening this week.\n    \n  \n  \n  \n  \n  \n    15\n    \n      4/23: \n    \n    \n    \n      4/25: Last day of class\n    \n    \n    \n      Turn in Reflection 3 by midnight on Friday 4/26."
  },
  {
    "objectID": "schedule.html#advanced-visualization-in-ggplot2",
    "href": "schedule.html#advanced-visualization-in-ggplot2",
    "title": "Schedule",
    "section": "1/23: Advanced visualization in ggplot2",
    "text": "1/23: Advanced visualization in ggplot2\nTo review plot creation skills from STAT/COMP 112 and STAT 155, use the diamonds dataset in the ggplot2 package to recreate the following visualizations:\n\nlibrary(ggplot2)\ndata(diamonds)"
  },
  {
    "objectID": "schedule.html#advanced-map-visualization",
    "href": "schedule.html#advanced-map-visualization",
    "title": "Schedule",
    "section": "1/30: Advanced map visualization",
    "text": "1/30: Advanced map visualization\nAfter/while watching this video on Coordinate Reference Systems (CRS), answer the following questions:\n\nWhat is the shape of the Earth?\nWhy is GDA94 a great datum name?\nWhat are the two components of a CRS/GCS?\nWhy do we use many different local CRSs rather than just one CRS for the whole earth?\nWhy is it insufficient to identify a location by its latitude and longitude?\nWhy do we need to be mindful about CRSs when working with different spatial datasets?"
  },
  {
    "objectID": "skills_session1.html",
    "href": "skills_session1.html",
    "title": "Skills Session 1",
    "section": "",
    "text": "Purpose\nGet really good with keyboard shortcuts for two main reasons:\n\nUsing shortcuts saves a ton of time\nIt feels really cool!\n\n\n\nTask\n\nReview and practice all shortcuts described here.\nDuring our in-person skills session (week of 2/5-2/9), I will ask you to demonstrate your ability to use most of these shortcuts within a roughly 5 minute span.\n\n\n\nRequirements for passing\nYou will Pass this Skills Session if you can do all of the commands I ask without using your mouse.\nIf you forget a few shortcuts, it’s ok! Just write down the ones you missed and show them to me the next day."
  },
  {
    "objectID": "slides/day1.html#plan-for-today",
    "href": "slides/day1.html#plan-for-today",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Plan for today",
    "text": "Plan for today\n\nWhat is this course about?\nGet to know your classmates\nShaping our syllabus together\nCreate your personal website!\n\nWebsite content building + connecting with classmates"
  },
  {
    "objectID": "slides/day1.html#what-is-this-course-about",
    "href": "slides/day1.html#what-is-this-course-about",
    "title": "Welcome to Intermediate Data Science!",
    "section": "What is this course about?",
    "text": "What is this course about?\n\nExpanding your abilities for self-reflection in service of:\n\nYour lifelong independent learning\nOur course community\n\nExpanding your data science toolbox:\n\nVisualization\nWrangling\nData acquisition\nData storytelling\n\n\nI’ve intentionally put reflection first and data science skills second not necessarily in order of importance but because cultivating data science skills will come automatically—reflection and community-building won’t."
  },
  {
    "objectID": "slides/day1.html#get-to-know-your-classmates",
    "href": "slides/day1.html#get-to-know-your-classmates",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Get to know your classmates",
    "text": "Get to know your classmates\nIn groups, introduce yourselves with the following prompts: (~2 minutes/person)\n\nName, preferred pronouns\nMacalester connections (e.g., majors/minors/concentrations, clubs, teams, events regularly attended)\nHow are you feeling about starting the academic year?\nWhat is one thing you wish came up more in conversation?\nIf you could use data to investigate anything, what would it be?\n\nWhen we come back together, you will introduce someone else from your group briefly with:\n\nTheir name and preferred pronouns\n1 memorable thing you learned about them from your conversation"
  },
  {
    "objectID": "slides/day1.html#syllabus-shaping-learning-goals",
    "href": "slides/day1.html#syllabus-shaping-learning-goals",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Syllabus shaping: learning goals",
    "text": "Syllabus shaping: learning goals\nNavigate to the Course learning goals section of our syllabus.\nPart 1: Reflect (~3 min)\nWrite a few sentences responding to the following questions:\n\nWhat are your goals in taking this class?\nDo you see your goals reflected in the course learning goals? If not, how would you like to see the course goals amended to see your goals reflected in them?\n\nPart 2: Share (~5 min)\nAt your tables, take turns sharing your responses to the above questions. As a group, summarize your discussion in this Google Doc. Elect 1 person to present this summary when we come together as a class to share."
  },
  {
    "objectID": "slides/day1.html#my-qualms-with-grades",
    "href": "slides/day1.html#my-qualms-with-grades",
    "title": "Welcome to Intermediate Data Science!",
    "section": "My qualms with grades",
    "text": "My qualms with grades\nGrades (final and intermediate letter grades/points) make me uncomfortable because they:\n\nTend to distract from learning (due to a greater focus on the grade than on qualitative feedback)\nCreate anxiety that hinders risk-taking and exploration\nCreate a power dynamic between me and you that I am uncomfortable with. (I feel like a gatekeeper.)\n\nIf I had my way, I would never assign letter grades and only give qualitative comments all semester. Unfortunately, I am required to submit a letter grade at the end of the course.\n\nI need your input: which of the following two grading systems should we use for the semester?"
  },
  {
    "objectID": "slides/day1.html#option-1",
    "href": "slides/day1.html#option-1",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Option 1",
    "text": "Option 1\nSummary: evaluation of learning is done by instructor\n\n\n\n\n\n\n\n\n\n\n\n\nCourse component\nLetter grade: A\nLetter grade: B\nLetter grade: C\n\n\n\n\nSelf-reflection in learning process\nShow clear growth and consistent thoughtfulness throughout the semester\nShow some growth and some thoughtfulness throughout the semester\nShow little to no growth and minimal thoughtfulness throughout the semester\n\n\nSelf-reflection in collaborative learning (groupwork)\n\n\nWeekly homework\nPass all homework assignments\nPass all but 1 homework assignment\nPass all but 2 homework assignments\n\n\nFinal project\nComplete a project that is high quality in all of the following aspects:\n\nData wrangling, visualization, analysis, and interpretation\nWorkflow and organization\nAddressing peer and instructor feedback\nGiving feedback to peers\nEthical consideration and communication of results\n\nComplete a project that is at least ok quality in the aforementioned aspects and high quality in some aspects\nComplete a project that is ok quality in the aforementioned aspects"
  },
  {
    "objectID": "slides/day1.html#option-2",
    "href": "slides/day1.html#option-2",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Option 2",
    "text": "Option 2\nSummary: evaluation of learning is done by students in conversation with instructor\nMain difference: The standards below are the basis for your self-evaluation. I will join in on the conversation after reviewing your work and your self-evaluation. We will assign grades through conversation.\n\n\n\n\n\n\n\n\n\nCourse component\nLetter grade: A\nLetter grade: B\nLetter grade: C\n\n\n\n\nSelf-reflection in learning process\nShow clear growth and consistent thoughtfulness throughout the semester\nShow some growth and some thoughtfulness throughout the semester\nShow little to no growth and minimal thoughtfulness throughout the semester\n\n\nSelf-reflection in collaborative learning (groupwork)\n\n\nWeekly homework\nShow strong understanding of concepts across all homework assignments\nShow strong understanding of concepts across most homework assignments\nShow adequate understanding of concepts across most homework assignments\n\n\nFinal project\nComplete a project that is high quality in all of the following aspects:\n\nData wrangling, visualization, analysis, and interpretation\nWorkflow and organization\nAddressing peer and instructor feedback\nGiving feedback to peers\nEthical consideration and communication of results\n\nComplete a project that is at least ok quality in the aforementioned aspects and high quality in some aspects\nComplete a project that is ok quality in the aforementioned aspects"
  },
  {
    "objectID": "slides/day1.html#syllabus-shaping-grading-system",
    "href": "slides/day1.html#syllabus-shaping-grading-system",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Syllabus shaping: grading system",
    "text": "Syllabus shaping: grading system\nNavigate to the Grading and feedback section of our syllabus to refer to details of the two grading options as needed.\nPart 1: Reflect (~5 min)\nWrite a few sentences responding to the following questions:\n\nWhich of the two options would be better for motivating you to learn as much as possible, and why? For reducing stress?\nWith regards to motivation and stress, are there any other parts of the course (not directly related to the grading system) that you think would benefit from changing?\n\nPart 2: Share (~10-15 min)\nAt your tables, take turns sharing your responses to the above questions. As a group, summarize your discussion in this Google Doc. Elect 1 person to present this summary when we come together as a class to share."
  },
  {
    "objectID": "slides/day1.html#start-your-personal-website-quarto",
    "href": "slides/day1.html#start-your-personal-website-quarto",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Start your personal website: Quarto",
    "text": "Start your personal website: Quarto\nFile &gt; New Project &gt; New Directory &gt; Quarto Website\n\nName the directory personal_website.\nPut this directory in a place you’ll access beyond this course (and beyond Mac)\n\nSome files will get created in the directory, and your newly created website will open in your browser."
  },
  {
    "objectID": "slides/day1.html#your-quarto-site-what-are-these-files",
    "href": "slides/day1.html#your-quarto-site-what-are-these-files",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Your Quarto site: what are these files?",
    "text": "Your Quarto site: what are these files?\nQuarto markdown files: The formatting in these files is almost identical to RMarkdown files (e.g., * for italics, ** for bold, # for headers).\n\nindex.qmd: This generates the content on the Home page.\nabout.qmd: This generates the content on the About page.\n\nOther files:\n\n_quarto.yml: Controls metadata about the website and how it should be built\nstyles.css: Controls the visual appearance of the site (e.g., color themes, fonts, spacing)\n\nWARNING: The more you know about CSS, the more addicting it is! It is very easy to unintentionally spend hours playing with colors and site appearance. 😆"
  },
  {
    "objectID": "slides/day1.html#todays-goal-the-about-page",
    "href": "slides/day1.html#todays-goal-the-about-page",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Today’s goal: the “About” page",
    "text": "Today’s goal: the “About” page\nOne of the first questions that comes up in every job interview is a question about yourself: “Tell me about yourself. How did you get to this point? What type of work do you want to do?”\nCrafting your homepage and About page can help you prepare for this question and have benefits even before the interview.\nLet’s take a look at an approach for crafting a thoughtful about page."
  },
  {
    "objectID": "slides/day1.html#some-context",
    "href": "slides/day1.html#some-context",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Some context",
    "text": "Some context\nRichard Feynman was a Nobel prize-winning physicist whose contributions fundamentally reshaped our understanding of the physical world.\nA major part of his success was a method for viewing the world: a mindset of viewing the world through the lens of several open-ended questions. Feynman called these his “favorite problems.” He said of these problems:\n\nYou have to keep a dozen of your favorite problems constantly present in your mind, although by and large they will lay in a dormant state. Every time you hear or read a new trick or a new result, test it against each of your twelve problems to see whether it helps. Every once in a while there will be a hit, and people will say, “How did [they] do it? [They] must be a genius!”\nQuote source: Forte Labs"
  },
  {
    "objectID": "slides/day1.html#the-12-favorite-problems-framework",
    "href": "slides/day1.html#the-12-favorite-problems-framework",
    "title": "Welcome to Intermediate Data Science!",
    "section": "The 12 Favorite Problems framework",
    "text": "The 12 Favorite Problems framework\nEveryone can generate a list of their own 12 favorite problems - a set of meaningful open-ended questions that allow you to learn, explore, and act with intention on your biggest interests in life. Their benefits:\n\n\nDedicate your time and attention to ideas that truly spark your curiosity\nSee how a piece of information might be useful and why it’s worth keeping\nSee insightful patterns across multiple subjects that seem unrelated, but might share a common thread\nFocus the impact of your work on problems where you can make a real difference\nPrime your subconscious to notice helpful solutions to your biggest challenges in the world around you\nAttract like-minded people who have the same interests and goals as you\n\nSource: Forte Labs"
  },
  {
    "objectID": "slides/day1.html#brainstorming-our-12-favorite-problems-fps",
    "href": "slides/day1.html#brainstorming-our-12-favorite-problems-fps",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Brainstorming our 12 favorite problems (FPs)",
    "text": "Brainstorming our 12 favorite problems (FPs)\nNavigate to this article by Tiago Forte, and scroll down to the first step “Get started with these prompts.”\nWe’ll take 15-20 minutes to brainstorm our 12 FPs in the about.qmd file of your new website project.\nTiago Forte provides examples of his 12 FPs in his post. Feel free to also look at my own for more examples. (I’m working on updating my 12 FPs today alongside you!)\nWhat does this have to do with data science?? The 12 FP framework is a way of filtering the deluge of information thrown at us to the precious subset that matter most to our deepest questions. In other words, using data of all forms most effectively in our day-to-day lives. I truly believe that adopting this approach will help you become the kinds of data scientists who will be invaluable wherever you go."
  },
  {
    "objectID": "slides/day1.html#sharing-our-12-fps",
    "href": "slides/day1.html#sharing-our-12-fps",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Sharing our 12 FPs",
    "text": "Sharing our 12 FPs\nIn groups, each person will have ~2 minutes to share their top 2 FPs and get some feedback from the group. The group should give feedback to help make the FPs more specific, counterintuitive, and interdiscipinary:\n\nSpecific:\n\nOriginal: “How can I be a better leader?” is a little broad.\nPossible improvement: “How can I be a better leader as an introvert?”\n\nCounterintuitive:\n\nOriginal: “How can I improve the standard of living in the global south?”\nPossible improvement: “How can I improve the standard of living in the global south without further contributing to the climate change that threatens those regions the most?”\n\nInterdisciplinary:\n\nOriginal: How can I improve education?”\nPossible improvement: “How can I improve education by borrowing ideas from video games?”\n\n\n(Examples from Forte Labs)"
  },
  {
    "objectID": "slides/day1.html#free-time",
    "href": "slides/day1.html#free-time",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Free time",
    "text": "Free time\nThe remainder of the class period is free time. Some suggestions for spending the time:\n\nGet up and sit with new people. Share your 12 FPs with each other and get further feedback.\nKeep working on your website. Google to learn more about CSS and play with the appearance of your page in the styles.css file.\nClarify anything about the course with me."
  },
  {
    "objectID": "slides/day1.html#announcements",
    "href": "slides/day1.html#announcements",
    "title": "Welcome to Intermediate Data Science!",
    "section": "Announcements",
    "text": "Announcements\nTo do before class on Thursday:\n\nSet up R and RStudio using these instructions.\nJoin our Slack workspace.\n\nUpdate your Slack profile with preferred name, pronouns, name pronunciation. (To find your profile, click on your name under Direct Messages on the left menu, and click “Edit Profile”.)\nIntroduce yourself in the #general channel.\n\nComplete the pre-course survey.\nLook at the Guiding Questions for Thursday’s class on advanced ggplot2.\nTake a look at Homework 0.\n\nThis is a personal essay that doesn’t need to be turned in.\nTopic: Your 10-year vision\nMy hope is that writing this allows gives you more clarity on how to align what you do this semester (and beyond) with who/what/how you want to be.\n\nFinish writing your 12 favorite problems and post them in the #12-favorite-problems channel on Slack.\n\nWhen you connect with peers from Thursday onward, you’ll be using your 12FPs to get to know each other a bit first before working on activities together."
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Nature doesn’t reveal its secrets easily. - Thomas Kempa\n\nNor do data.\nBut that is exactly what can make data science so thrilling!\nThis course is about empowering you with the wisdom to ask the best questions of data–ones that are meaningful, adaptive, and equity-minded–and the technical savvy to answer them.\nBecause your careers (whether in data science or not), will all involve further learning and working with others, my other primary goal is for you to cultivate self-reflection skills with regards to your own learning and your collaboration with others. In this way, I hope that you feel confident learning new skills on your own in the future and contributing to a welcoming work community.\n\n\n\n\n\n\nCourse catalog description\n\n\n\n\n\nThis second course in the data science curriculum emphasizes advanced data wrangling and manipulation, interactive visualization, writing functions, working with data in databases, version control, and data ethics. Through open-ended and interdisciplinary projects, students practice the constant feedback loop of asking questions of the data, manipulating the data to help answer the question, and then returning to more questions. Prerequisite(s): COMP 112 and COMP 123 and STAT 155; STAT 253 recommended but not required.\n\n\n\n\n\nBy the end of this course you should be able to:\n\nSustain a reflection practice\n\nReflect on your learning process so that you are equipped for independent learning\nReflect on your collaborative work so that you can form community no matter where you go\n\nCreate effective visualizations and interactive applications\n\nCreate a variety of visualizations in ggplot2 that go beyond the plot types that you learned in STAT/COMP 112\nWrangle and visualize spatial data\nCreate interactive web applications and visualizations that adapt to user input\n\nWrangle arbitrarily messy data\n\nUse appropriate R tools to manage numeric, logical, date, strings, and factors\nUse appropriate R tools to write functions and loops\nUse appropriate methods when working with missing data\nDouble check your data cleaning steps to ensure accuracy\n\nAcquire data from a variety of sources\n\nWrite queries in structured query language (SQL) to access data from databases\nWrite code to access data from application programming interfaces (APIs)\nWrite code to scrape data from websites and evaluate the ethics of collecting such data\n\nCraft high quality data stories\n\nIterate on the question-explore-question cycle to craft compelling data stories with attention to data context and ethical considerations\nUse a combination of data acquisition, data wrangling, static and interactive visualization, and statistical modeling to further a data science investigation\n\nUse AI and search tools to figure out difficult tasks\n\nUse appropriate coding jargon to construct effective search queries (e.g., Google) and evaluate the accuracy of results that you find\nConstruct effective AI prompts (e.g., Chat GPT, Google Bard) and evaluate the accuracy of generated results\nArticulate the ethical and environmental considerations in using AI and search tools\n\nUse professional data science tools\n\nUse Git as a version control system\nMaintain a digital portfolio of your data science projects on your personal website\n\n\n\n\n\n\n\n\nReflect\n\n\n\n\nWhich of the learning goals above do you disagree with or want more clarity on?\nDo you have any goals that you’d like to include on this list?"
  },
  {
    "objectID": "syllabus.html#course-learning-goals",
    "href": "syllabus.html#course-learning-goals",
    "title": "Syllabus",
    "section": "",
    "text": "By the end of this course you should be able to:\n\nSustain a reflection practice\n\nReflect on your learning process so that you are equipped for independent learning\nReflect on your collaborative work so that you can form community no matter where you go\n\nCreate effective visualizations and interactive applications\n\nCreate a variety of visualizations in ggplot2 that go beyond the plot types that you learned in STAT/COMP 112\nWrangle and visualize spatial data\nCreate interactive web applications and visualizations that adapt to user input\n\nWrangle arbitrarily messy data\n\nUse appropriate R tools to manage numeric, logical, date, strings, and factors\nUse appropriate R tools to write functions and loops\nUse appropriate methods when working with missing data\nDouble check your data cleaning steps to ensure accuracy\n\nAcquire data from a variety of sources\n\nWrite queries in structured query language (SQL) to access data from databases\nWrite code to access data from application programming interfaces (APIs)\nWrite code to scrape data from websites and evaluate the ethics of collecting such data\n\nCraft high quality data stories\n\nIterate on the question-explore-question cycle to craft compelling data stories with attention to data context and ethical considerations\nUse a combination of data acquisition, data wrangling, static and interactive visualization, and statistical modeling to further a data science investigation\n\nUse AI and search tools to figure out difficult tasks\n\nUse appropriate coding jargon to construct effective search queries (e.g., Google) and evaluate the accuracy of results that you find\nConstruct effective AI prompts (e.g., Chat GPT, Google Bard) and evaluate the accuracy of generated results\nArticulate the ethical and environmental considerations in using AI and search tools\n\nUse professional data science tools\n\nUse Git as a version control system\nMaintain a digital portfolio of your data science projects on your personal website\n\n\n\n\n\n\n\n\nReflect\n\n\n\n\nWhich of the learning goals above do you disagree with or want more clarity on?\nDo you have any goals that you’d like to include on this list?"
  },
  {
    "objectID": "syllabus.html#meet-the-instructional-team",
    "href": "syllabus.html#meet-the-instructional-team",
    "title": "Syllabus",
    "section": "Meet the instructional team",
    "text": "Meet the instructional team\n\nLeslie Myint (instructor)\nAbout me: One of my greatest joys is sharing the beauty of data-driven thinking, so I’m thrilled to be teaching this course! I also get very excited talking about all things games! I love playing board games, Dungeons and Dragons (D&D), and Nintendo console games. I also love staying active with weightlifting and rock climbing and hoping to learn cross-country skiing this winter!\nKyle Suelflow (preceptor)\n\nAbout me:\n\nNa Nguyen (preceptor)\n\nAbout me:\n\nGraham Elliot (preceptor)\n\nAbout me:"
  },
  {
    "objectID": "syllabus.html#how-to-contact-me",
    "href": "syllabus.html#how-to-contact-me",
    "title": "Syllabus",
    "section": "How to contact me",
    "text": "How to contact me\n\n\n\n\n\n\nCall me “Leslie”\n\n\n\nStudents sometimes wonder what to call their professors. I prefer to be called Leslie (lez-lee), but if you prefer to be more formal, I am also ok with Professor Myint (pronounced “mee-int”). My preferred gender pronouns are she/her/hers.\nPlease help me make sure that I call you by your preferred name and pronouns too!\n\n\nI love getting to talk to students outside of class time—whether about class-related topics or anything else. Come chat with me!\nI’ll be setting times for drop-in hours based on feedback from the pre-course survey. I’ll update my drop-in hours on our course homepage and Moodle when they’re finalized.\nI’m also happy to meet one-on-one if my normal drop-in hours don’t work. You can schedule a time to meet with me via Calendly."
  },
  {
    "objectID": "syllabus.html#discussion-board-slack",
    "href": "syllabus.html#discussion-board-slack",
    "title": "Syllabus",
    "section": "Discussion board (Slack)",
    "text": "Discussion board (Slack)\nSlack is a commonly used communication tool in industry and is useful to be familiar with, so we’ll be using it as our discussion board.\n\nIf you’re new to Slack, this video provides a quick overview.\nFirst join our STAT/COMP 212: Spring 2024 workspace here.\nAfter joining, you can access our workspace here. (You might want to bookmark this if you have Slack open in your web broswer.)"
  },
  {
    "objectID": "syllabus.html#community-is-key",
    "href": "syllabus.html#community-is-key",
    "title": "Syllabus",
    "section": "Community is key",
    "text": "Community is key\nA sense of community and connectedness can provide a powerful environment for learning: Research shows that learning is maximized when students feel a sense of belonging in the educational environment (e.g., Booker, 2016). A negative climate may create barriers to learning, while a positive climate can energize students’ learning (e.g., Pascarella & Terenzini, cited in How Learning Works, 2012).\nFor these reasons, I will be designing our in-class group activities to intentionally foster commmunity and connectedness. You can help cultivate our classroom community by being thoughtful about the way you engage with others in class."
  },
  {
    "objectID": "syllabus.html#reflection-is-paramount",
    "href": "syllabus.html#reflection-is-paramount",
    "title": "Syllabus",
    "section": "Reflection is paramount",
    "text": "Reflection is paramount\nThe content you learn will be cool (unbiased opinion!), but it is a guarantee that as technology evolves, some part of it will become out of date during your careers. What you will need to rely on when you leave Macalester is what I want to ensure you cultivate now: a good learning process. And the cornerstone of a good learning process is reflection.\nReflection is not just fundamental to learning content–it’s fundamental to learning any sort of intellectual, emotional, or physical skill. For this reason, I will be prioritizing reflection as a goal for our course in both content learning and collaborative activities. (Note that these reflection goals are the first two course learning goals.)"
  },
  {
    "objectID": "syllabus.html#mistakes-are-essential",
    "href": "syllabus.html#mistakes-are-essential",
    "title": "Syllabus",
    "section": "Mistakes are essential",
    "text": "Mistakes are essential\n\nAn expert is a person who has made all the mistakes which can be made in a narrow field. - Niels Bohr, Nobel Prize-winning physicist\n\nI don’t feel comfortable working with a new R package until I’ve seen the same errors over and over again. Seeing new errors helps me understand the constraints of the code and the assumptions that I was making about my data."
  },
  {
    "objectID": "syllabus.html#communication-is-a-superpower",
    "href": "syllabus.html#communication-is-a-superpower",
    "title": "Syllabus",
    "section": "Communication is a superpower",
    "text": "Communication is a superpower\nEvery time I go to a conference talk on a technical topic, it is striking how quickly laptops or phones come out because of the inability to follow. Academics notoriously struggle to make ideas accessible to others.\nI want communication to be very different for you.\nEvery time you communicate ideas–whether through writing, visuals, or oral presentation–I want you to be a total boss. The end product of strong communication is a better experience for all those who have given you their attention. What’s more, the process of crafting effective communication is invaluable for deepening your own understanding:\n\n\n\nRead to collect the dots, write to connect them pic.twitter.com/YbgnKKFUNn\n\n— David Perell (@david_perell) July 5, 2021"
  },
  {
    "objectID": "syllabus.html#outside-of-class",
    "href": "syllabus.html#outside-of-class",
    "title": "Syllabus",
    "section": "Outside of class",
    "text": "Outside of class\nPre-class videos/readings: Most class periods will have a required video or reading to review ideas from previous courses or to familiarize yourself with new concepts before seeing them again in class. My goal for these videos and readings is for you to get the most out of class time by being able to more easily follow explanations in class and to engage most fully in class activities. I will provide Guiding Questions for each video/reading to focus your attention.\n\n\n\n\n\n\nSuggestion\n\n\n\n\nScan the Guiding Questions before watching/reading to preview the main ideas. Fill in answers to these questions as you read.\nAsk (and answer!) questions in the #questions channel in our Slack workspace.\nRecord any reflections from in-class time about your learning process or interactions with peers while they are still fresh.\nAfter learning a new topic in class, it is helpful to immediately attempt the related exercises on the upcoming homework assignment.\nCome to instructor drop-in hours to chat about the course or anything else! 😃"
  },
  {
    "objectID": "syllabus.html#during-class",
    "href": "syllabus.html#during-class",
    "title": "Syllabus",
    "section": "During class",
    "text": "During class\nClass time will be a mix of interactive lecture and longer stretches of group work. During the lecture portion, I will pause explanation frequently to prompt a short exercise or ask questions that you’ll reflect on individually or together.\n\n\n\n\n\n\nSuggestion\n\n\n\nReview your learning process and group work reflections just before class to frame how you want to engage in class. (Perhaps you’ve noted a struggle and want to try a new strategy.)"
  },
  {
    "objectID": "syllabus.html#my-philosophy",
    "href": "syllabus.html#my-philosophy",
    "title": "Syllabus",
    "section": "My philosophy",
    "text": "My philosophy\nGrading is thorny issue for many educators because of its known negative effects on learning and motivation. Nonetheless, it is ever-present in the US education system and at Macalester. Because I am required to submit grades for this course, it’s worth me taking a minute to share my philosophy about grading with you.\nWhat excites me about being a teacher is your learning. Learning flourishes in an environment where you find meaning and value in what we’re exploring, feel safe engaging with challenging things, receive useful feedback, and regularly reflect on your learning.\nIf I didn’t have to give grades, I wouldn’t. But because I am required to, it is important to me to create a course structure and grading system that creates an environment for learning to flourish:\n\nFinding meaning and value: I am striving to achieve this by creating space for authentic connection between you, your peers, and myself and by encouraging you to explore a topic that intrigues you for our course project.\nSafety in engaging with challenges: The assignments and activities that we will use to learn are meant to be challenging, and it would be unreasonable for me to expect that you perform perfectly on the first try. For this reason, every assignment and assessment has an opportunity for unlimited revisions/reattempts without penalty. I hope that this alleviates stress considerably. If ever you are feeling overwhelmed by this course, please reach out to me. We’ll find a way to make things more manageable.\n\nNote: While the number of revisions you can submit is unlimited in theory, in practice, there is a limit to how quickly the preceptors and I can review revisions and give feedback.\n\nReceiving useful feedback and reflecting regularly: In order to learn maximally by pursuing a revision, you need BOTH good feedback and to reflect thoughtfully about misconceptions in your learning. Our preceptors and I will strive to give useful comments and prompts to spur reflection when we see room for improvement. A requirement for submitting a revision is to include a paragraph where you describe and reflect on your prior misconceptions."
  },
  {
    "objectID": "syllabus.html#assignments-and-assessments",
    "href": "syllabus.html#assignments-and-assessments",
    "title": "Syllabus",
    "section": "Assignments and assessments",
    "text": "Assignments and assessments\n\nAsynchronous skills demonstrations\nOur course learning goals will have associated challenges for practicing the tools/concepts. During weekly homework assignments, you will work on one challenge from the most recent class topic as well as the prior class topic. A challenge will either receive a grade of Pass (P) or Not Yet (NY). Requirements for passing will be clearly described in each challenge.\n\n\n\n\n\n\n\n\nSkills category\n\n\n\n\n\n\nAdvanced ggplot2\nChallenge 1\nChallenge 2\n\n\nSpatial visualization\nChallenge 1\nChallenge 2\n\n\nShiny\nChallenge 1\nChallenge 2\n\n\nData wrangling\nChallenge 1\nChallenge 2\n\n\nModeling and missing data\nChallenge 1\nChallenge 2\n\n\nWriting functions\nChallenge 1\nChallenge 2\n\n\nWriting loops\nChallenge 1\nChallenge 2\n\n\nAPIs\nChallenge 1\nChallenge 2\n\n\nWeb scraping\nChallenge 1\nChallenge 2\n\n\nSQL\nChallenge 1\nChallenge 2\n\n\n\n\n\n\n\n\n\nPurpose\n\n\n\nThe purpose of skills challenges is to engage in targeted and repeated practice for core skills. The reason for interleaving different topics within a single homework assignment is to promote skills becoming more deeply ingrained by spacing out practice over time.\n\n\nRevising and resubmitting challenges: If you receive a grade of NY, you can revise and resubmit your work without penalty as long as you do the following:\n\nWrite a reflection paragraph at the top of your assignment in which you address: What improvements were you asked to make based on feedback on your previous submission? How has reviewing your feedback improved your understanding? (What do you understand better/differently than you did before?)\nSubmit your revised work by issuing another pull request on the GitHub Classroom challenge link.\n\n\n\nIn-person skills sessions\nA skills session (SS) is a discussion that you and I will have about course content. There will be 3 SS’s in the semester (weeks of 2/5, 3/4, and 4/15).\n\nSkills session 1: This session will be very short (5 minutes) and will focus on your fluency with keyboard shortcuts. Sometime during the week of 2/5-2/9 come talk to me to demonstrate your keyboard shortcut usage.\nSkills session 2: This session will be 30 minutes. Schedule this during the week of 3/4-3/8 via Calendly.\nSkills session 3: This session will be 30 minutes. Schedule this during the week of 4/15-4/19 via Calendly.\n\nOne week before the SS, I will provide a set of problems that you can (and should!) work on with peers. During the SS, we will talk through a subset of those problems. I will choose some problems that I’d like you to talk through, and in the time remaining, you will talk through a problem (or part of a problem) of your choosing.\n\n\n\n\n\n\nPurpose\n\n\n\nThe purpose of a SS is to encourage deep and collaborative study and to give us both a detailed understanding of your learning.\n\n\nBefore the SS I will provide a rubric that explains how I will assess your understanding. I will also provide requirements for a grade of Pass (P). If you do not Pass an SS, you will receive a grade of Not Yet (NY).\nRe-attempting a skills session: If you receive a grade of NY, you can re-attempt the SS without penalty as long as you do the following:\n\nSchedule another discussion of the same length as the original SS (via Calendly).\nRevise how you will talk through the problem (or parts of problems) that you struggled with.\nReflect on the following: What improvements were you asked to make based on feedback on your previous submission? How has reviewing your feedback improved your understanding? (What do you understand better/differently than you did before?) Be prepared to tell me about this reflection at the next SS.\n\n\n\nReflections\nRoughly 1, 2, and 3 months into the semester, you will write reflections in which you think about your goals, progress, and next steps. To provide observations that you can draw from in these reflections, I will be asking you to maintain a personal class journal in which you regularly record insights from working on class activities.\nReflections that show thoughtfulness with incorporation of concrete observations from the personal class journal will receive a grade of Pass (P).\nRevising and resubmitting reflections: If your reflection is not yet passing, I will give feedback on some areas for improvement/additional consideration and ask you to resubmit.\n\n\nProject\nThe best way to learn data science and feel like a data scientist is to work on meaningful data-driven projects. The course project will be a semester-long, collaborative experience in which you investigate a series of meaningful questions using multiple datasets.\n\n\n\n\n\n\nPurpose\n\n\n\nThe purpose of the project is to engage in a meaningful and collaborative data-driven experience and to build something that you would be proud to showcase to an employer on your personal website.\n\n\nThrough regular milestones (roughly every 2 weeks) throughout the semester you will set goals for future milestones, make progress on the goals you set out in the previous milestone, and integrate feedback from previous milestones. Details about project milestones and deliverables will be housed on the Project page.\nEach project milestone will receive a grade of Pass (P) or Not Yet (NY) based on the progress made relative to the goals that we agree upon.\nRevising and resubmitting milestones: If you receive a grade of NY, you can revise and resubmit your work without penalty, but it is important that we have a discussion about why goals were not met so that we can plan a reasonable path forward."
  },
  {
    "objectID": "syllabus.html#course-grading-system",
    "href": "syllabus.html#course-grading-system",
    "title": "Syllabus",
    "section": "Course grading system",
    "text": "Course grading system\n\nRequirements for a B\nIn order to earn a final letter grade of B, you will need to:\n\nAsynchronous skills demonstrations: Pass the first challenge in each skills category.\nIn-person skills sessions: Pass all 3 in-person skills sessions.\nReflection: Pass all 3 monthly reflections.\nProject: Pass all project checkpoints. Submit a passing code base and a passing digital artifact.\n\n\n\nRequirements for an A\nIn order to earn a final letter grade of A, you will need to meet the requirements for a B and do the following:\n\nAsynchronous skills demonstrations: Pass both challenges in each skills category.\nProject: Thoughtfully integrate peer and instructor feedback to create a codebase and digital artifact that go beyond the Passing requirements and meet the Excellent requirements in at least 2 areas.\nYour choice: One of the following:\n\nMake a good faith effort at 5 different Tidy Tuesday challenges.\nLearn a new skill or an existing topic more deeply. If you choose this option, talk with me to discuss what this might look like. (Examples: Python, Tableau, writing R packages, a statistical modeling concept)"
  },
  {
    "objectID": "syllabus.html#late-work",
    "href": "syllabus.html#late-work",
    "title": "Syllabus",
    "section": "Late work",
    "text": "Late work\nHomework assignments will generally be due weekly on Mondays at midnight. (There are 2 assignments due on Fridays.) If you anticipate needing more time to complete an assignment, please email me ahead of time to discuss. Limited extensions will always be granted:\n\nThe ideal extension: Turn in the homework by the following Wednesday morning at 9am (a 1 day, 9 hour extension). The instructional team will often be working to give feedback on Wednesdays, so having an assignment turned in by Wednesday morning is helpful."
  },
  {
    "objectID": "syllabus.html#academic-integrity",
    "href": "syllabus.html#academic-integrity",
    "title": "Syllabus",
    "section": "Academic integrity",
    "text": "Academic integrity\nAcademic integrity is the cornerstone of our learning community. Students are expected to be familiar with the college’s standards on academic integrity.\nI encourage you to work with your classmates to discuss material and ideas for assignments, but in order for you to receive individualized feedback on your own learning, you must submit your own work. This involves writing your own code and putting explanations into your own words. Always cite any sources you use, including AI (see section below)."
  },
  {
    "objectID": "syllabus.html#artificial-intelligence-ai-use",
    "href": "syllabus.html#artificial-intelligence-ai-use",
    "title": "Syllabus",
    "section": "Artificial intelligence (AI) use",
    "text": "Artificial intelligence (AI) use\nLearning to use AI tools is an emerging skill that we will explore together in this course. I expect you to use AI (ChatGPT, Google Bard)—in fact, some assignments may require it.\nPlease be aware of the limits of AI:\n\nAI does not always generate accurate output. If it gives you a number, fact, or code, assume it is wrong unless you either know the answer or can check in with another source. AI works best for topics you already understand to a sufficient extent.\nIf you provide minimum effort prompts, you will get low quality results. You will need to refine your prompts in order to get good outcomes. This will take work.\nBe thoughtful about when this tool is useful. Don’t use it if it isn’t appropriate for the case or circumstance.\nThe environmental impact of AI should not be ignored. The building and usage of AI tools consumes a lot of energy (see here and here). For this reason, we will be very thoughtful about when we use AI and will discuss other sustainability behaviors that we can incorporate into our lives to offset this usage.\nAI is a tool, but one that you need to acknowledge using. Any ideas, language, or code that is produced by AI must be cited, just like any other resource.\n\nHow to cite AI: Please include a paragraph at the end of any assignment that uses AI explaining what you used the AI for and what prompts you used to get the results. Failure to do so is in violation of the academic integrity policy at Macalester College.\n\n\nIf you have any questions about your use of AI tools, please contact me to discuss them."
  },
  {
    "objectID": "tech_setup.html",
    "href": "tech_setup.html",
    "title": "Tech Setup",
    "section": "",
    "text": "Follow these instructions to set up the software that we’ll be using throughout the semester. Even if you’ve already downloaded both R and RStudio, you’ll want to re-download to make sure that you have the most current versions.\n\nRequired: Change the default file download location for your internet browser.\n\nGenerally by default, internet browsers automatically save all files to the Downloads folder on your computer. This does not encourage good file organization practices. You need to change this option so that your browser asks you where to save each file before downloading it.\nThis page has information on how to do this for the most common browsers.\n\n\nRequired: Re-install R and RStudio.\n\nFIRST: Download R here.\n\nIn the top section, tou will see three links “Download R for …”\nChoose the link that corresponds to your computer.\nAs of January 16, 2024, the latest version of R is 4.3.2 (“Eye Holes”).\n\nSECOND: Download RStudio here.\n\nClick the button under step 2 to install the version of RStudio recommended for your computer.\nAs of January 16, 2024, the latest version of RStudio is 2023.12.0-369.\n\nTHIRD: Check that when you go to File &gt; New Project &gt; New Directory, you see “Quarto Website” as an option.\n\n\nSuggested: Watch this video describing key configuration options for RStudio.\n\nRequired: Install required packages.\n\nAn R package is an extra bit of functionality that will help us in our data analysis efforts in a variety of ways.\nOpen RStudio and click inside the Console pane (by default, the bottom left pane). Copy and paste the following command into the Console. You should see the text below appear to the right of the &gt;, which is called the R prompt. After you paste, hit Enter.\n\n\ninstall.packages(c(\"tidyverse\"))\n\n\nYou will see a lot of text from status messages appearing in the Console as the packages are being installed. Wait until you see the &gt; again.\nEnter the command library(tidyverse) and hit Enter.\nIf you see an error message, then there was a problem installing the package. Post the full error message in the #questions channel in our Slack workspace and\nQuit RStudio. You’re done setting up!\n\nOptional: For a refresher on RStudio features, watch this video. It also shows you how to customize the layout and color scheme of RStudio.\n\nRequired: Set essential RStudio options.\nGo to Edit &gt; Preferences &gt; General\nNavigate to the “Workspace” section.\n\nRestore .RData into workspace at startup: Leave this unchecked\nSave workspace to .RData on exit: Select “Never”\n\nWithout doing this RStudio will save all of the objects in your Environment. In practice, this leads to all of the objects, datasets, etc that you have ever worked with at Macalester being loaded in when you start RStudio.\n\nThis can make startup slow.\nIt clutters the Environment. (e.g., You’re working on something and referring to diamonds not knowing that a diamonds that was used in class last year is already in the Environment.)"
  },
  {
    "objectID": "workflow_files_rstudio.html",
    "href": "workflow_files_rstudio.html",
    "title": "Workflow: Files and RStudio setup",
    "section": "",
    "text": "Generally by default, internet browsers automatically save all files to the Downloads folder on your computer. This does not encourage good file organization practices. You need to change this option so that your browser asks you where to save each file before downloading it.\nThis page has information on how to do this for the most common browsers.\n\n\n\n\nWhen working on any data science project, I recommend setting up the directory (folder) structure below. Sub-bullets indicate folders that are inside other folders.\n\nDocuments (This should be some place you can find easily through your Finder (Mac) or File Explorer (Windows).)\n\ndescriptive_project_name\n\ncode\n\nraw: For messy code that you’re actively working on\nclean: For code that you have cleaned up, documented, organized, and tested to run as expected\n\ndata\n\nraw: Original data that hasn’t been cleaned\nclean: Any non-original data that has been processed in some way\n\nresults\n\nfigures: Plots that will be used in communicating your project should go here. (Using screenshots of output in RStudio is not a good practice.)\ntables: Any sort of plain text file results (e.g., CSVs)\n\n\n\n\nFrom this point onward, we will use a simplified version of this directory structure for all of our class activities.\n\n\nCreate a folder for this course in a place you can find easily through your Finder (Mac) or File Explorer (Windows). The name of this folder should not have spaces (use underscores _ instead). Suggestion: STAT212 or COMP212\nOrganize your files from class using the following directory structure:\n\nSTAT212 (or COMP212)\n\nadvanced_ggplot (For our Advanced visualization in ggplot2 activity)\n\ncode\n\n02-adv-ggplot.qmd\n\ndata\n\nadvanced_maps (For our Advanced map visualization activity)\n\ncode\n\n03-adv-maps.qmd\n\ndata\n\napportionment.csv\nshp_loc_pop_centers (From shp_loc_pop_centers.zip)\nshp_water_lakes_rivers (From shp_water_lakes_rivers.zip)\nus_states_hexgrid.geojson\n\n\n\n\n\n\n\nIn a code file, when you read in data from a source on your computer, you need to specify the file path correctly. The file path is a text string that tells you how to get from your code file to the data. There are two types of paths: absolute and relative.\nAbsolute file paths start at the “root” directory in a computer system. Examples:\n\nMac: /Users/lesliemyint/Desktop/teaching/STAT212/2023_fall/class_activities/advanced_maps/us_states_hexgrid.geojson\n\nOn a Mac the tilde ~ in a file path refers to the “Home” directory, which is /Users/lesliemyint. In this case, the path becomes ~/Desktop/teaching/STAT212/2023_fall/class_activities/advanced_maps/us_states_hexgrid.geojson\n\nWindows: C:/Users/lesliemyint/Documents/teaching/STAT212/2023_fall/class_activities/advanced_maps/us_states_hexgrid.geojson\n\nNote: Windows uses both / (forward slash) and \\ (backward slash) to separate folders in a file path.\n\n\n\nRelative file paths start wherever you are right now (the working directory (WD)). The WD when you’re working in a code file may be different from the working directory in the Console.\nDirectory setup 1: Data is in same folder as code file\n\nsome_folder\n\nyour_code_file.qmd\ndata.csv\n\n\nThere are two options for the relative path:\n\n./data.csv (The ./ refers to the current working directory.)\ndata.csv\n\nDirectory setup 2: Data is within a subfolder called data\n\nsome_folder\n\nyour_code_file.qmd\ndata\n\ndata.csv\n\n\n\nThe relative path would be data/data.csv. (Note: ./data/data.csv would also work.)\nDirectory setup 3: Need to go to a “parent” folder first to get to the data\n\nsome_folder\n\ndata.csv\ncode\n\nyour_code_file.qmd\n\n\n\nTo go “up” a folder in a relative path we use ../.\nThe relative path here would be ../data.csv.\n\n\n\nIn 03-adv-maps.qmd, navigate to the code chunk where you read in us_states_hexgrid.geojson, apportionment.csv, shp_loc_pop_centers, and shp_water_lakes_rivers.\nUpdate the file paths to correctly find the data in the new directory structure."
  },
  {
    "objectID": "workflow_files_rstudio.html#change-the-default-file-download-location-for-your-internet-browser",
    "href": "workflow_files_rstudio.html#change-the-default-file-download-location-for-your-internet-browser",
    "title": "Workflow: Files and RStudio setup",
    "section": "",
    "text": "Generally by default, internet browsers automatically save all files to the Downloads folder on your computer. This does not encourage good file organization practices. You need to change this option so that your browser asks you where to save each file before downloading it.\nThis page has information on how to do this for the most common browsers."
  },
  {
    "objectID": "workflow_files_rstudio.html#folderdirectory-structure",
    "href": "workflow_files_rstudio.html#folderdirectory-structure",
    "title": "Workflow: Files and RStudio setup",
    "section": "",
    "text": "When working on any data science project, I recommend setting up the directory (folder) structure below. Sub-bullets indicate folders that are inside other folders.\n\nDocuments (This should be some place you can find easily through your Finder (Mac) or File Explorer (Windows).)\n\ndescriptive_project_name\n\ncode\n\nraw: For messy code that you’re actively working on\nclean: For code that you have cleaned up, documented, organized, and tested to run as expected\n\ndata\n\nraw: Original data that hasn’t been cleaned\nclean: Any non-original data that has been processed in some way\n\nresults\n\nfigures: Plots that will be used in communicating your project should go here. (Using screenshots of output in RStudio is not a good practice.)\ntables: Any sort of plain text file results (e.g., CSVs)\n\n\n\n\nFrom this point onward, we will use a simplified version of this directory structure for all of our class activities.\n\n\nCreate a folder for this course in a place you can find easily through your Finder (Mac) or File Explorer (Windows). The name of this folder should not have spaces (use underscores _ instead). Suggestion: STAT212 or COMP212\nOrganize your files from class using the following directory structure:\n\nSTAT212 (or COMP212)\n\nadvanced_ggplot (For our Advanced visualization in ggplot2 activity)\n\ncode\n\n02-adv-ggplot.qmd\n\ndata\n\nadvanced_maps (For our Advanced map visualization activity)\n\ncode\n\n03-adv-maps.qmd\n\ndata\n\napportionment.csv\nshp_loc_pop_centers (From shp_loc_pop_centers.zip)\nshp_water_lakes_rivers (From shp_water_lakes_rivers.zip)\nus_states_hexgrid.geojson\n\n\n\n\n\n\n\nIn a code file, when you read in data from a source on your computer, you need to specify the file path correctly. The file path is a text string that tells you how to get from your code file to the data. There are two types of paths: absolute and relative.\nAbsolute file paths start at the “root” directory in a computer system. Examples:\n\nMac: /Users/lesliemyint/Desktop/teaching/STAT212/2023_fall/class_activities/advanced_maps/us_states_hexgrid.geojson\n\nOn a Mac the tilde ~ in a file path refers to the “Home” directory, which is /Users/lesliemyint. In this case, the path becomes ~/Desktop/teaching/STAT212/2023_fall/class_activities/advanced_maps/us_states_hexgrid.geojson\n\nWindows: C:/Users/lesliemyint/Documents/teaching/STAT212/2023_fall/class_activities/advanced_maps/us_states_hexgrid.geojson\n\nNote: Windows uses both / (forward slash) and \\ (backward slash) to separate folders in a file path.\n\n\n\nRelative file paths start wherever you are right now (the working directory (WD)). The WD when you’re working in a code file may be different from the working directory in the Console.\nDirectory setup 1: Data is in same folder as code file\n\nsome_folder\n\nyour_code_file.qmd\ndata.csv\n\n\nThere are two options for the relative path:\n\n./data.csv (The ./ refers to the current working directory.)\ndata.csv\n\nDirectory setup 2: Data is within a subfolder called data\n\nsome_folder\n\nyour_code_file.qmd\ndata\n\ndata.csv\n\n\n\nThe relative path would be data/data.csv. (Note: ./data/data.csv would also work.)\nDirectory setup 3: Need to go to a “parent” folder first to get to the data\n\nsome_folder\n\ndata.csv\ncode\n\nyour_code_file.qmd\n\n\n\nTo go “up” a folder in a relative path we use ../.\nThe relative path here would be ../data.csv.\n\n\n\nIn 03-adv-maps.qmd, navigate to the code chunk where you read in us_states_hexgrid.geojson, apportionment.csv, shp_loc_pop_centers, and shp_water_lakes_rivers.\nUpdate the file paths to correctly find the data in the new directory structure."
  },
  {
    "objectID": "workflow_files_rstudio.html#in-rstudio",
    "href": "workflow_files_rstudio.html#in-rstudio",
    "title": "Workflow: Files and RStudio setup",
    "section": "In RStudio",
    "text": "In RStudio\n\nWhen you’re in the Console, hitting the up and down arrow keys allows you to cycle through previous commands\nTab completion\n\nType part of a function or object name (in the Editor or Console) and then hit Tab. A menu of autocomplete options will popup. Select your choice with arrow keys and hit Tab or Enter. (e.g., Type ggp and hit Tab.)\nType part of a function argument and then hit Tab for a menu of autocomplete options."
  },
  {
    "objectID": "workflow_files_rstudio.html#in-general-for-typing",
    "href": "workflow_files_rstudio.html#in-general-for-typing",
    "title": "Workflow: Files and RStudio setup",
    "section": "In general for typing",
    "text": "In general for typing\n\nMoving your cursor to the beginning/end of a word\n\nMac: Option + Left/Right\nWindows: Ctrl + Left/Right\n\nDeleting one word at a time\n\nMac: Option + Backspace\nWindows: Ctrl + Backspace\n\nMoving your cursor to the beginning/end of a line\n\nMac: Command + Left/Right\nWindows: Alt + Left/Right\n\nDeleting a whole line at a time\n\nMac: Command + Backspace\nWindows: Alt + Backspace"
  }
]